{"version":3,"sources":["app/hooks.ts","app/axiosInstance.ts","app/helpers.tsx","components/Footer.tsx","features/ui/uiSlice.ts","features/MyOrders/MyOrdersSlice.ts","features/Users/UsersSlice.ts","features/Auth/authSlice.ts","app/hooks/useForm.tsx","features/products/productSlice.ts","features/products/productAPI.ts","components/SearchBox/index.tsx","components/Header.tsx","components/loading/loading.tsx","features/products/Rating.tsx","features/products/Product.tsx","components/Message.tsx","components/Paginate/index.tsx","components/products/ProductSearchResults.tsx","components/products/ProductCarousel.tsx","screens/HomeScreen.tsx","features/products/CountInStock2.tsx","features/Cart/cartSlice.ts","features/Reviews/ReviewsSlice.ts","features/Reviews/ReviewsAPI.ts","components/products/ProductReviews.tsx","components/Review/WriteReview.tsx","features/products/productDetails.tsx","screens/ProductScreen.tsx","features/Cart/CartItems.tsx","features/Cart/Subtotal.tsx","screens/CartScreen.tsx","components/LoadSpinner.tsx","screens/LoginScreen.tsx","features/Auth/authAPI.ts","screens/RegisterScreen.tsx","features/Orders/OrdersSlice.ts","features/MyOrders/MyOrderAPI.ts","screens/ProfileScreen.tsx","features/CheckoutSteps.tsx","screens/ShippingScreen.tsx","screens/PaymentScreen.tsx","features/MyOrders/PlaceOrderInfo.tsx","features/MyOrders/OrderSummary.tsx","screens/PlaceOrderScreen.tsx","features/MyOrders/OrderDetails.tsx","features/Orders/OrdersAPI.ts","screens/Order/OrderScreen.tsx","screens/UserListScreen.tsx","features/Users/UsersAPI.ts","screens/UserEditScreen.tsx","screens/ProductListCreen.tsx","components/ImageUpload.tsx","features/products/ProductForm.tsx","screens/ProductEditScreen.tsx","screens/ProductCreateScreen.tsx","routers/PrivateRoute.tsx","screens/Order/OrderListScreen.tsx","routers/AppRouter.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","instance","create","headers","Accept","instanceImageUpload","interceptors","request","use","config","userFromLS","loadFromLocalStorage","token","error","Promise","reject","saveToLocalStorage","name","state","localStorage","setItem","JSON","stringify","e","console","stateStr","getItem","parse","undefined","getMsgError","err","response","data","message","productImageUpload","images","productId","a","formData","FormData","i","length","append","post","msgError","Swal","fire","deleteImage","imagesToDelete","put","setMainProductImage","imageId","image_id","product_id","Footer","Container","Row","Col","className","uiSlice","createSlice","initialState","loading","reducers","setError","action","payload","removeError","startLoading","stopLoading","actions","isLoading","ui","isError","success","subtotal","shippingPrice","taxPrice","total","currentOrder","orders","getOrderById","createAsyncThunk","id","dispatch","_id","Number","startLoadingOrder","get","order","orderItems","paymentMethod","shippingAddress","subTotal","totalPrice","createdAt","deleveredAt","isDelivered","isPaid","paidAt","user","finishLoadingOrder","setSuccess","myOrderSlice","props","paymentResult","setOrderError","setCurrentOrder","removeCurrentOrder","setOrders","resetOrders","setPrices","removeOrderError","extraReducers","builder","addCase","fulfilled","getCurrentOrder","userOrders","getSuccess","getOrderState","isLoadingOrder","getOrders","getOrderError","setSelectedUserById","getState","userLocal","users","find","u","removeSelectedUser","setSelectedUser","usersSlice","selectedUser","startLoadingUsers","finishLoadingUsers","setUsersError","removeUsersError","resetUsers","setUsers","isLoadingUsers","getErrorUsers","getUsersState","getUsersSuccess","getSelectedUser","isLoggedIn","checking","startLogout","_","authSlice","login","logout","initLogin","finishLogin","removeItem","isChecking","auth","getUser","isAuthenticated","getAuthState","useForm","useState","values","setValues","handleInputChange","target","value","reset","newFormState","products","topProducts","productsPages","currentProductsPerPage","page","lastPageWithDeletedProd","hasErrors","reqSuccess","selectedProduct","pagination","pages","pageSize","keyword","isSearchResults","searchResults","currentSearchResults","searchPagination","setSelectedProductById","currentProdsPerPage","productLocal","p","setSelectedProduct","fetchProduct","updateProducts","productImages","productPages","product","prod","updatedProduct","map","img","isMain","mainImageUrl","url","publicId","updatedCurrentProdPage","updateduCurrentProdsPerPage","updatedProdPages","prodPage","setProductsPages","setcurrentProductsPerPage","productSlice","initLoading","finishLoading","setReqSuccess","setLastPageWithDelProd","setIsSearchResults","setProducts","setTopProducts","setProductSearchresults","setCurrentSearchResults","setkeyword","setPagination","setSearchPagination","setProductError","removeProductError","removeSelectedProduct","getProductsState","getSelectedProduct","fetchTopProducts","updateProdPages","prodPages","fetchProducts","kw","updatedProductPages","getProductsPerPage","lastPageWithDelProds","productsPerPage","fetchSearchProducts","newSearchResult","updatedSearchResults","getProductsSearch","kwSearch","kwInMemery","sr","productSearchPage","SearchBox","history","useHistory","formValues","Form","onSubmit","preventDefault","trim","push","location","pathname","Control","type","onChange","Button","variant","Header","Navbar","bg","expand","collapseOnSelect","to","onClick","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","log","isAdmin","Loading","Rating","text","color","style","Product","onClickHandler","Card","Img","src","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Paginate","handleClick","search","numPages","Pagination","x","active","ProductSearchResults","productsState","sm","md","lg","xl","ProductCarousel","useEffect","span","offset","Carousel","pause","Image","alt","Caption","HomeScreen","loadingProducts","CountInStock2","qty","countInStock","updateProduct","updateQty","optionsNumber","String","onChangeHandler","items","totalItems","calcSubTotal","forEach","cartItem","toFixed","calcTotalItems","reduce","acc","item","updateShippingAddressLS","savePaymentMethodLS","pMethod","resetCartLS","cartSlice","updateItems","updateShippingAddress","updatePaymentMethod","resetCart","getCartItems","cart","getSubtotal","getTotalItems","getShippingAddress","getCart","loadingReview","createReviewSuccess","selectedProductReviews","reviews","reviewsSlice","setLoading","setLoadingReview","setCreateReviewSuccess","setReviews","setSelectedProductReviews","getLoadingReviews","getSelectedProductReviews","getLoadingReview","getCreateReviewSuccess","fetchProductReviews","allProductReviews","productReviews","updatedAllProdReviews","ProductReviews","ListGroup","review","substring","comment","WriteReview","userState","isProductReviewLoading","reviewSuccess","productsReviews","productToUpdate","newProductReview","updatedProducReviews2","updatedProductsReviews","product_rating","product_num_reviews","updatedProdsPerPage","updatedProdPage","position","icon","showConfirmButton","timer","createProductReview","Group","controlId","Label","disabled","ProductDetails","setQty","isProductReviewsLoading","image","interval","description","xs","newValue","itemInCart","updatedItems","citem","updatedSubTotal","updatedTotalItems","addToCartLS","ProductScreen","match","match_id","params","CartItems","cartProduct","setCartProduct","removeProductFromCart","filter","removeFromCartLS","addToCartHandlerCb","useCallback","fluid","rounded","size","Subtotal","CartScreen","cartItems","LoadSpinner","Spinner","animation","role","height","width","margin","display","LoginScreen","redirect","split","email","password","username","startLogin","placeholder","RegisterScreen","setMessage","confirmPassword","startUserRegister","required","OrdersSlice","getOrdersState","updateProducQtys","prodPageUpdated","ordItem","getTotalCartPrice","ProfileScreen","loadingOrders","orderError","updateUserProfile","Table","striped","responsive","setCurrentOrderHandler","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","city","postalCode","country","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderInfo","idx","OrderSummary","placeOrderHandler","aria-hidden","PlaceOrderScreen","orderState","uiLoading","loadingOrder","newOrder","setAllOrders","createOrder","OrderDetails","href","orderId","localOrder","updatedOrder","updatedOrders","fetchAllOrders","OrderScreen","deliveredAt","UserListScreen","usersState","res","deleteUserHandler","window","confirm","updatedUsers","delete","userDelete","bordered","hover","userId","EditUserScreen","setIsAdmin","usr","userUpdate","ProductListScreen","authState","deleteProductHandler","deleteProduct","category","brand","UploadImages","fileList","setFileList","imageURLs","setImageURLs","inputRef","useRef","fileToBlob","file","Blob","Uint8Array","arrayBuffer","updateImageUrlsCB2","updatedImgUrls","fileImage","blobImage","URL","createObjectURL","onImageChange","fileArray","imgFile","multiple","accept","ref","files","imgSrc","updatedImageUrls","dt","DataTransfer","add","current","deleteFile","ProductForm","eventHandler","edit","filesToUpload","setFilesToUpload","imageToDelete","setImageToDelete","setProductImages","onSetMainImage","updatedProdImgs","mainImage","updatedImagesToDelete","updatedProductImages","onImageDeleteHandler","ImageUpload","ProductEditScreen","imagesToUpload","uploadedProductImgs","imgToDelete","ProductCreateScreen","imagesToLoad","newProduct","lastProductPage","productPage","newPage","newProductPage","createProduct","ProtectedRoute","authenticationPath","routeProps","OrderListScreen","ordersState","AppRouter","defaultProtectedRouteProps","path","component","exact","App","cartItemsFromLS","shippingAddressFromLS","paymentMethodFromLS","fetchCount","amount","resolve","setTimeout","incrementAsync","counterSlice","status","increment","decrement","incrementByAmount","pending","store","configureStore","reducer","counter","counterReducer","uiReducer","productReducer","cartReducer","authReducer","userOrdersReducer","orderListReducer","usersReducer","reviewsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c304184c.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import axios from \"axios\";\r\nimport { loadFromLocalStorage } from \"./helpers\";\r\n\r\n//const base_url = \"proshop.ibazaldua.net\";\r\n\r\naxios.defaults.baseURL = \"https://proshop.ibazaldua.net\";\r\n\r\nexport const instance = axios.create({\r\n  //baseURL: base_url,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n  },\r\n});\r\n\r\nexport const instanceImageUpload = axios.create({\r\n  //baseURL: base_url,\r\n  headers: {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n  },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const userFromLS = loadFromLocalStorage(\"user\");\r\n    if (userFromLS) {\r\n      const token = userFromLS.token;\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n      return config;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstanceImageUpload.interceptors.request.use(\r\n  (config) => {\r\n    const userFromLS = loadFromLocalStorage(\"user\");\r\n    if (userFromLS) {\r\n      const token = userFromLS.token;\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n      return config;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n","import { AxiosError, AxiosResponse } from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport { instanceImageUpload, instance } from \"../app/axiosInstance\";\r\nimport { IImage } from \"../schemas\";\r\n\r\nexport const saveToLocalStorage = (name: string, state: any) => {\r\n  try {\r\n    localStorage.setItem(name, JSON.stringify(state));\r\n  } catch (e) {\r\n    console.error(\"ERROR AL GUARDAR EN LOCALSTORAGE\");\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nexport const loadFromLocalStorage = (name: string) => {\r\n  try {\r\n    const stateStr = localStorage.getItem(name);\r\n    return stateStr ? JSON.parse(stateStr) : undefined;\r\n  } catch (e) {\r\n    console.error(\"ERROR AL CARGAR DE LOCALSTORAGE\");\r\n    console.error(e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const getMsgError = (err: AxiosError) => {\r\n  let msgError = \"Connection to server fail, please try again later!\";\r\n\r\n  if (err.response && err.response.data.message) {\r\n    msgError = err.response.data.message;\r\n  } else {\r\n    msgError = err.message;\r\n  }\r\n  return msgError;\r\n};\r\n\r\nexport const productImageUpload = async (\r\n  images: FileList,\r\n  productId: string\r\n) => {\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n      formData.append(\"images\", images[i]);\r\n    }\r\n    formData.append(\"product_id\", productId);\r\n\r\n    const response: AxiosResponse = await instanceImageUpload.post(\r\n      \"/api/products/upload/\",\r\n      formData\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error: any) {\r\n    const msgError = getMsgError(error);\r\n    Swal.fire(\"Error\", msgError, \"error\");\r\n  }\r\n};\r\n\r\nexport const deleteImage = async (imagesToDelete: IImage[]) => {\r\n  try {\r\n    const response: AxiosResponse = await instance.put(\r\n      \"/api/products/image/delete/\",\r\n      { imagesToDelete: imagesToDelete }\r\n    );\r\n    return response;\r\n  } catch (err: any) {\r\n    const msgError = getMsgError(err);\r\n    Swal.fire(\"Error\", msgError, \"error\");\r\n  }\r\n};\r\n\r\nexport const setMainProductImage = async (\r\n  imageId: string,\r\n  productId: string\r\n) => {\r\n  try {\r\n    const response = await instance.post(\"/api/products/image/setMain/\", {\r\n      image_id: imageId,\r\n      product_id: productId,\r\n    });\r\n    return response;\r\n  } catch (err: any) {\r\n    Swal.fire(\"Error\", \"failed to update main image\", \"error\");\r\n  }\r\n};\r\n\r\nexport const resizeFile = (file: File) => {\r\n  new Promise((resolve) => {\r\n    Resizer.imageFileResizer(\r\n      file,\r\n      900, // maxWidth\r\n      900, // maxHeight\r\n      \"JPEG\", // Compress format\r\n      80, // Quality\r\n      0, // Rotation\r\n      (uri) => {\r\n        // Response UriFunction\r\n        // Is the Callback fn of the resized new image URI\r\n        resolve(uri);\r\n      },\r\n      \"base64\" // Is the output type of the resized new image\r\n    );\r\n  });\r\n};\r\n","import React, { VFC } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport const Footer: VFC = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; Proshop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\n\r\ninterface uiState {\r\n  loading: Boolean;\r\n  msgError: string | null;\r\n}\r\n\r\nconst initialState: uiState = {\r\n  loading: false,\r\n  msgError: null,\r\n};\r\n\r\nexport const uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState,\r\n  reducers: {\r\n    setError: (state, action: PayloadAction<string>) => {\r\n      state.msgError = action.payload;\r\n      state.loading = false;\r\n    },\r\n    removeError: (state) => {\r\n      state.msgError = null;\r\n    },\r\n    startLoading: (state) => {\r\n      state.loading = true;\r\n    },\r\n    stopLoading: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setError, removeError, startLoading, stopLoading } =\r\n  uiSlice.actions;\r\n\r\nexport const isLoading = (state: RootState) => state.ui.loading;\r\n\r\nexport const isError = (state: RootState) => state.ui.msgError;\r\n\r\nexport default uiSlice.reducer;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { instance } from \"../../app/axiosInstance\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { IOrderInDetails } from \"../../schemas\";\r\nimport { startLoading, stopLoading, setError } from \"../ui/uiSlice\";\r\nimport { getMsgError } from \"../../app/helpers\";\r\n\r\ntype OrdersState = {\r\n  success: boolean;\r\n  subtotal: number;\r\n  shippingPrice: number;\r\n  taxPrice: number;\r\n  total: number;\r\n  currentOrder: IOrderInDetails | undefined;\r\n  orders: IOrderInDetails[];\r\n  loading: boolean;\r\n  error: string | null;\r\n};\r\n\r\nconst initialState: OrdersState = {\r\n  success: false,\r\n  subtotal: 0,\r\n  shippingPrice: 0,\r\n  taxPrice: 0,\r\n  total: 0,\r\n  currentOrder: undefined,\r\n  orders: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const getOrderById = createAsyncThunk(\r\n  \"order/getOrderById\",\r\n  async (id: string, { dispatch }) => {\r\n    const _id = Number(id);\r\n    dispatch(startLoadingOrder());\r\n    try {\r\n      const response: AxiosResponse = await instance.get(`/api/orders/${_id}`);\r\n\r\n      const order: IOrderInDetails = {\r\n        _id: response.data._id,\r\n        orderItems: response.data.orderItems,\r\n        paymentMethod: response.data.paymentMethod,\r\n        shippingAddress: response.data.shippingAddress,\r\n        shippingPrice: response.data.shippingPrice,\r\n        subTotal: response.data.subTotal,\r\n        taxPrice: response.data.taxPrice,\r\n        totalPrice: response.data.totalPrice,\r\n        createdAt: response.data.createdAt,\r\n        deleveredAt: response.data.deleveredAt,\r\n        isDelivered: response.data.isDelivered,\r\n        isPaid: response.data.isPaid,\r\n        paidAt: response.data.paidAt,\r\n        user: response.data.user,\r\n      };\r\n      dispatch(finishLoadingOrder());\r\n\r\n      return order;\r\n    } catch (err: any) {\r\n      const msgError = getMsgError(err);\r\n      dispatch(setError(msgError));\r\n      dispatch(finishLoadingOrder());\r\n      dispatch(setSuccess(false));\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n      throw err;\r\n    }\r\n  }\r\n);\r\n\r\ninterface payOrderProps {\r\n  id: string;\r\n  paymentResult: string;\r\n}\r\nexport const payOrder2 = createAsyncThunk(\r\n  \"order/payOrder\",\r\n  async (props: payOrderProps, { dispatch }) => {\r\n    const _id = Number(props.id);\r\n\r\n    dispatch(startLoading());\r\n    try {\r\n      const response: AxiosResponse = await instance.put(\r\n        `/api/orders/${_id}/pay`,\r\n        props.paymentResult\r\n      );\r\n      dispatch(stopLoading());\r\n    } catch (err: any) {\r\n      dispatch(stopLoading());\r\n      const msgError = getMsgError(err);\r\n      dispatch(setOrderError(msgError));\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n      throw err;\r\n    }\r\n  }\r\n);\r\n\r\nexport const myOrderSlice = createSlice({\r\n  name: \"userOrders\",\r\n  initialState,\r\n  reducers: {\r\n    setCurrentOrder: (state, action: PayloadAction<IOrderInDetails>) => {\r\n      state.currentOrder = action.payload;\r\n    },\r\n    removeCurrentOrder: (state) => {\r\n      state.currentOrder = undefined;\r\n    },\r\n    setOrders: (state, action: PayloadAction<IOrderInDetails[]>) => {\r\n      state.orders = action.payload;\r\n    },\r\n    resetOrders: (state) => {\r\n      state.orders = [];\r\n    },\r\n    setSuccess: (state, action: PayloadAction<boolean>) => {\r\n      state.success = action.payload;\r\n    },\r\n    setPrices: (\r\n      state,\r\n      action: PayloadAction<{\r\n        subTotal: number;\r\n        taxPrice: number;\r\n        shippingPrice: number;\r\n        total: number;\r\n      }>\r\n    ) => {\r\n      state.subtotal = action.payload.subTotal;\r\n      state.shippingPrice = action.payload.shippingPrice;\r\n      state.taxPrice = action.payload.taxPrice;\r\n      state.total = action.payload.total;\r\n    },\r\n    startLoadingOrder: (state) => {\r\n      state.loading = true;\r\n    },\r\n    finishLoadingOrder: (state) => {\r\n      state.loading = false;\r\n    },\r\n    setOrderError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n    removeOrderError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(\r\n      getOrderById.fulfilled,\r\n      (state, action: PayloadAction<IOrderInDetails>) => {\r\n        state.currentOrder = action.payload;\r\n      }\r\n    );\r\n  },\r\n});\r\n\r\nexport const {\r\n  setCurrentOrder,\r\n  setOrders,\r\n  setSuccess,\r\n  setPrices,\r\n  startLoadingOrder,\r\n  finishLoadingOrder,\r\n  setOrderError,\r\n  removeOrderError,\r\n  resetOrders,\r\n  removeCurrentOrder,\r\n} = myOrderSlice.actions;\r\n\r\nexport const getCurrentOrder = (state: RootState) =>\r\n  state.userOrders.currentOrder;\r\nexport const getSuccess = (state: RootState) => state.userOrders.success;\r\nexport const getOrderState = (state: RootState) => state.userOrders;\r\nexport const isLoadingOrder = (state: RootState) => state.userOrders.loading;\r\nexport const getOrders = (state: RootState) => state.userOrders.orders;\r\nexport const getOrderError = (state: RootState) => state.userOrders.error;\r\n\r\nexport default myOrderSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport Swal from \"sweetalert2\";\r\nimport { AppThunk } from \"../../app/store\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { IUserBase } from \"../../schemas\";\r\n\r\ninterface IUsersState {\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: string | null;\r\n  users: IUserBase[];\r\n  selectedUser: IUserBase | null;\r\n}\r\n\r\nconst initialState: IUsersState = {\r\n  loading: false,\r\n  success: false,\r\n  error: null,\r\n  users: [],\r\n  selectedUser: null,\r\n};\r\n\r\nexport const setSelectedUserById =\r\n  (id: string): AppThunk =>\r\n  (dispatch, getState) => {\r\n    const users = getState().users.users;\r\n\r\n    const userLocal = users.find((u) => Number(u._id) === Number(id));\r\n\r\n    if (!userLocal) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        `USUARIO CON ID: ${id} NO ENCONTRADO EN MEMORIA`,\r\n        \"error\"\r\n      );\r\n      dispatch(removeSelectedUser());\r\n      return;\r\n    }\r\n\r\n    dispatch(setSelectedUser(userLocal));\r\n  };\r\n\r\nexport const usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    startLoadingUsers: (state) => {\r\n      state.loading = true;\r\n    },\r\n    finishLoadingUsers: (state) => {\r\n      state.loading = false;\r\n    },\r\n    setUsersError: (state, action: PayloadAction<string>) => {\r\n      state.error = action.payload;\r\n    },\r\n    removeUsersError: (state) => {\r\n      state.error = null;\r\n    },\r\n    resetUsers: (state) => {\r\n      state.users = [];\r\n    },\r\n    setUsers: (state, action: PayloadAction<IUserBase[]>) => {\r\n      state.users = action.payload;\r\n    },\r\n    setSuccess: (state, action: PayloadAction<boolean>) => {\r\n      state.success = action.payload;\r\n    },\r\n    setSelectedUser: (state, action: PayloadAction<IUserBase>) => {\r\n      state.selectedUser = action.payload;\r\n    },\r\n    removeSelectedUser: (state) => {\r\n      state.selectedUser = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  startLoadingUsers,\r\n  finishLoadingUsers,\r\n  setUsersError,\r\n  removeUsersError,\r\n  resetUsers,\r\n  setUsers,\r\n  setSuccess,\r\n  setSelectedUser,\r\n  removeSelectedUser,\r\n} = usersSlice.actions;\r\n\r\nexport const getUsers = (state: RootState) => state.users.users;\r\nexport const isLoadingUsers = (state: RootState) => state.users.loading;\r\nexport const getErrorUsers = (state: RootState) => state.users.error;\r\nexport const getUsersState = (state: RootState) => state.users;\r\nexport const getUsersSuccess = (state: RootState) => state.users.success;\r\nexport const getSelectedUser = (state: RootState) => state.users.selectedUser;\r\n\r\nexport default usersSlice.reducer;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { IUser } from \"../../schemas\";\r\nimport { resetOrders } from \"../MyOrders/MyOrdersSlice\";\r\nimport { resetUsers } from \"../Users/UsersSlice\";\r\nimport { removeError } from \"../ui/uiSlice\";\r\n\r\ninterface authState {\r\n  isLoggedIn: boolean;\r\n  checking: boolean;\r\n  user: IUser | undefined;\r\n}\r\n\r\nconst initialState: authState = {\r\n  isLoggedIn: false,\r\n  checking: false,\r\n  user: undefined,\r\n};\r\n\r\nexport const startLogout = createAsyncThunk(\r\n  \"auth/logout\",\r\n  (_, { dispatch }) => {\r\n    dispatch(resetOrders());\r\n    dispatch(resetUsers());\r\n    dispatch(removeError());\r\n  }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    login: (state, action: PayloadAction<IUser>) => {\r\n      state.isLoggedIn = true;\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.isLoggedIn = false;\r\n      state.checking = false;\r\n      state.user = undefined;\r\n    },\r\n    initLogin: (state) => {\r\n      state.checking = true;\r\n    },\r\n    finishLogin: (state) => {\r\n      state.checking = false;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(startLogout.fulfilled, (state) => {\r\n      state.user = undefined;\r\n      state.checking = false;\r\n      state.isLoggedIn = false;\r\n      localStorage.removeItem(\"user\");\r\n    });\r\n  },\r\n});\r\n\r\nexport const { login, logout, initLogin, finishLogin } = authSlice.actions;\r\n\r\nexport const isChecking = (state: RootState) => state.auth.checking;\r\nexport const getUser = (state: RootState) => state.auth.user;\r\nexport const isAuthenticated = (state: RootState) => state.auth.isLoggedIn;\r\nexport const getAuthState = (state: RootState) => state.auth;\r\n\r\nexport default authSlice.reducer;\r\n","import React, { useState } from \"react\";\r\n\r\ninterface useFormAction {\r\n  handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  reset: () => void;\r\n}\r\n\r\ninterface useFormStateReturn<T> {\r\n  values: T;\r\n}\r\n\r\nexport function useForm2<T = {}>(\r\n  initialState: T\r\n): [useFormStateReturn<T>, useFormAction] {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return [{ values }, { handleInputChange, reset }];\r\n}\r\n\r\nexport const useForm = <T,>(\r\n  initialState: T\r\n): [useFormStateReturn<T>, useFormAction] => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return [{ values }, { handleInputChange, reset }];\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk } from \"../../app/store\";\r\nimport { RootState } from \"../../app/store\";\r\nimport {\r\n  IProduct,\r\n  IImage,\r\n  IPagination,\r\n  IProductPages,\r\n  IProductSearchResults,\r\n} from \"../../schemas\";\r\n\r\nimport { fetchProduct } from \"./productAPI\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface productsState {\r\n  products: IProduct[];\r\n  topProducts: IProduct[];\r\n  productsPages: IProductPages[];\r\n  currentProductsPerPage: IProductPages | undefined;\r\n  lastPageWithDeletedProd: number;\r\n  loading: boolean;\r\n  hasErrors: boolean;\r\n  reqSuccess: boolean;\r\n  selectedProduct: IProduct | null;\r\n  pagination: IPagination;\r\n  keyword: string;\r\n  isSearchResults: boolean;\r\n  searchResults: IProductSearchResults[];\r\n  currentSearchResults: IProductPages | undefined;\r\n  searchPagination: IPagination;\r\n}\r\n\r\nconst initialState: productsState = {\r\n  products: [],\r\n  topProducts: [],\r\n  productsPages: [],\r\n  currentProductsPerPage: { page: 1, products: [] },\r\n  lastPageWithDeletedProd: 0,\r\n  loading: false,\r\n  hasErrors: false,\r\n  reqSuccess: false,\r\n  selectedProduct: null,\r\n  pagination: { page: 1, pages: 1, pageSize: 4 },\r\n  keyword: \"\",\r\n  isSearchResults: false,\r\n  searchResults: [],\r\n  currentSearchResults: undefined,\r\n  searchPagination: { page: 1, pages: 1, pageSize: 4 },\r\n};\r\n\r\nexport const setSelectedProductById =\r\n  (id: string): AppThunk =>\r\n  (dispatch, getState) => {\r\n    const currentProdsPerPage = getState().products.currentProductsPerPage;\r\n\r\n    const productLocal = currentProdsPerPage?.products.find(\r\n      (p) => Number(p._id) === Number(id)\r\n    );\r\n\r\n    if (!productLocal) {\r\n      // Swal.fire(\r\n      //   \"Error\",\r\n      //   `PRODUCTO CON ID: ${id} NO ENCONTRADO EN MEMORIA`,\r\n      //   \"error\"\r\n      // );\r\n      //dispatch(removeSelectedProduct());\r\n      dispatch(fetchProduct(id));\r\n      return;\r\n    }\r\n\r\n    dispatch(setSelectedProduct(productLocal));\r\n  };\r\n\r\nexport const updateProducts =\r\n  (productId: string, productImages: IImage[]): AppThunk =>\r\n  (dispatch, getState) => {\r\n    const productPages = getState().products.productsPages;\r\n    const currentProdsPerPage = getState().products.currentProductsPerPage;\r\n\r\n    const product = currentProdsPerPage?.products.find(\r\n      (prod) => Number(prod._id) === Number(productId)\r\n    );\r\n\r\n    if (!product) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        `PRODUCTO CON ID: ${productId} NO ENCONTRADO EN MEMORIA`,\r\n        \"error\"\r\n      );\r\n      return;\r\n    }\r\n    let updatedProduct = { ...product };\r\n\r\n    updatedProduct.images = productImages.map((img) => {\r\n      if (img.isMain) {\r\n        updatedProduct.mainImageUrl = img.url;\r\n      }\r\n      return {\r\n        _id: img._id,\r\n        publicId: img.publicId,\r\n        url: img.url,\r\n        isMain: img.isMain,\r\n      };\r\n    });\r\n\r\n    const updatedCurrentProdPage = currentProdsPerPage?.products.map(\r\n      (product) => {\r\n        if (Number(product._id) === Number(productId)) {\r\n          return updatedProduct;\r\n        }\r\n\r\n        return product;\r\n      }\r\n    );\r\n\r\n    if (updatedCurrentProdPage) {\r\n      const updateduCurrentProdsPerPage: IProductPages = {\r\n        page: currentProdsPerPage?.page || -1,\r\n        products: updatedCurrentProdPage,\r\n      };\r\n\r\n      const updatedProdPages = productPages.map((prodPage) => {\r\n        if (Number(prodPage.page) === Number(updatedCurrentProdPage)) {\r\n          return updateduCurrentProdsPerPage;\r\n        }\r\n        return prodPage;\r\n      });\r\n\r\n      dispatch(setProductsPages(updatedProdPages));\r\n      dispatch(setcurrentProductsPerPage(updateduCurrentProdsPerPage));\r\n    }\r\n  };\r\n\r\nexport const productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    initLoading: (state) => {\r\n      state.loading = true;\r\n    },\r\n    finishLoading: (state) => {\r\n      state.loading = false;\r\n    },\r\n    setReqSuccess: (state, action: PayloadAction<boolean>) => {\r\n      state.reqSuccess = action.payload;\r\n    },\r\n    setLastPageWithDelProd: (state, action: PayloadAction<number>) => {\r\n      state.lastPageWithDeletedProd = action.payload;\r\n    },\r\n    setIsSearchResults: (state, action: PayloadAction<boolean>) => {\r\n      state.isSearchResults = action.payload;\r\n    },\r\n    setProducts: (state, action: PayloadAction<IProduct[]>) => {\r\n      state.products = action.payload;\r\n    },\r\n    setTopProducts: (state, action: PayloadAction<IProduct[]>) => {\r\n      state.topProducts = action.payload;\r\n    },\r\n    setProductsPages: (state, action: PayloadAction<IProductPages[]>) => {\r\n      state.productsPages = action.payload;\r\n    },\r\n    setcurrentProductsPerPage: (\r\n      state,\r\n      action: PayloadAction<IProductPages | undefined>\r\n    ) => {\r\n      state.currentProductsPerPage = action.payload;\r\n    },\r\n    setProductSearchresults: (\r\n      state,\r\n      action: PayloadAction<IProductSearchResults[]>\r\n    ) => {\r\n      state.searchResults = action.payload;\r\n    },\r\n    setCurrentSearchResults: (\r\n      state,\r\n      action: PayloadAction<IProductPages | undefined>\r\n    ) => {\r\n      state.currentSearchResults = action.payload;\r\n    },\r\n    setkeyword: (state, action: PayloadAction<string>) => {\r\n      state.keyword = action.payload;\r\n    },\r\n    setPagination: (state, action: PayloadAction<IPagination>) => {\r\n      state.pagination = action.payload;\r\n    },\r\n    setSearchPagination: (state, action: PayloadAction<IPagination>) => {\r\n      state.searchPagination = action.payload;\r\n    },\r\n    setProductError: (state) => {\r\n      state.hasErrors = true;\r\n    },\r\n    removeProductError: (state) => {\r\n      state.hasErrors = false;\r\n    },\r\n    setSelectedProduct: (state, action: PayloadAction<IProduct>) => {\r\n      state.selectedProduct = action.payload;\r\n    },\r\n    removeSelectedProduct: (state) => {\r\n      state.selectedProduct = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  initLoading,\r\n  finishLoading,\r\n  setProducts,\r\n  setProductError,\r\n  removeProductError,\r\n  setSelectedProduct,\r\n  removeSelectedProduct,\r\n  setReqSuccess,\r\n  setPagination,\r\n  setkeyword,\r\n  setProductsPages,\r\n  setcurrentProductsPerPage,\r\n  setSearchPagination,\r\n  setCurrentSearchResults,\r\n  setProductSearchresults,\r\n  setIsSearchResults,\r\n  setTopProducts,\r\n  setLastPageWithDelProd,\r\n} = productSlice.actions;\r\n\r\nexport const getListProducts = (state: RootState) => state.products.products;\r\nexport const getProductsState = (state: RootState) => state.products;\r\nexport const getSelectedProduct = (state: RootState) =>\r\n  state.products.selectedProduct;\r\nexport const getIsSearchResults = (state: RootState) =>\r\n  state.products.isSearchResults;\r\nexport const getTopProducts = (state: RootState) => state.products.topProducts;\r\n\r\nexport default productSlice.reducer;\r\n","import { AxiosResponse } from \"axios\";\r\nimport { AppThunk } from \"../../app/store\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  IProduct,\r\n  ICreateProduct,\r\n  IImage,\r\n  IProductSearchResults,\r\n} from \"../../schemas\";\r\nimport { instance } from \"../../app/axiosInstance\";\r\nimport { IProductPages } from \"../../schemas\";\r\nimport {\r\n  getMsgError,\r\n  productImageUpload,\r\n  deleteImage,\r\n} from \"../../app/helpers\";\r\nimport {\r\n  initLoading,\r\n  finishLoading,\r\n  setProductError,\r\n  setReqSuccess,\r\n  setPagination,\r\n  setcurrentProductsPerPage,\r\n  setProductsPages,\r\n  setSearchPagination,\r\n  setCurrentSearchResults,\r\n  setProductSearchresults,\r\n  setIsSearchResults,\r\n  setTopProducts,\r\n  setLastPageWithDelProd,\r\n  setSelectedProduct,\r\n} from \"./productSlice\";\r\n\r\nexport const fetchTopProducts = (): AppThunk => async (dispatch) => {\r\n  dispatch(initLoading());\r\n  try {\r\n    const response: AxiosResponse = await instance.get<IProduct[]>(\r\n      \"/api/products/top\"\r\n    );\r\n\r\n    const products: IProduct[] = response.data;\r\n\r\n    dispatch(setTopProducts(products));\r\n    dispatch(finishLoading());\r\n  } catch (err: any) {\r\n    dispatch(finishLoading());\r\n    dispatch(setReqSuccess(false));\r\n    const msgError = getMsgError(err);\r\n    Swal.fire(\"Error\", msgError, \"error\");\r\n  }\r\n};\r\n\r\nexport const updateProdPages = (\r\n  prodPages: IProductPages[],\r\n  prodPage: IProductPages\r\n) => {\r\n  let updatedProdPages: IProductPages[] = [];\r\n\r\n  const prodPageToPudate = prodPages.find(\r\n    (prod) => Number(prod.page) === Number(prodPage.page)\r\n  );\r\n\r\n  if (prodPageToPudate) {\r\n    updatedProdPages = prodPages.map((prod) => {\r\n      if (Number(prod.page) === Number(prodPage.page)) {\r\n        return prodPage;\r\n      }\r\n\r\n      return prod;\r\n    });\r\n  } else {\r\n    updatedProdPages = [...prodPages, prodPage];\r\n  }\r\n\r\n  return updatedProdPages;\r\n};\r\n\r\nexport const fetchProducts =\r\n  (kw = \"\"): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const productPages = getState().products.productsPages;\r\n\r\n    dispatch(initLoading());\r\n\r\n    try {\r\n      const response: AxiosResponse = await instance.get<IProduct[]>(\r\n        `/api/products${kw}`\r\n      );\r\n\r\n      const products: IProduct[] = response.data.products;\r\n      const page = Number(response.data.page);\r\n      const pages = Number(response.data.pages);\r\n      const pageSize = Number(response.data.pageSize);\r\n      const updatedProductPages = updateProdPages(productPages, {\r\n        page,\r\n        products,\r\n      });\r\n\r\n      dispatch(setPagination({ page, pages, pageSize }));\r\n\r\n      dispatch(setProductsPages(updatedProductPages));\r\n      dispatch(setcurrentProductsPerPage({ page, products }));\r\n      dispatch(finishLoading());\r\n    } catch (err: any) {\r\n      dispatch(finishLoading());\r\n      dispatch(setReqSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const fetchProduct =\r\n  (productId: string): AppThunk =>\r\n  async (dispatch) => {\r\n    dispatch(initLoading());\r\n\r\n    try {\r\n      const response: AxiosResponse = await instance.get<IProduct>(\r\n        `/api/products/${productId}/`\r\n      );\r\n\r\n      const product: IProduct = response.data;\r\n\r\n      dispatch(setSelectedProduct(product));\r\n      dispatch(finishLoading());\r\n    } catch (err: any) {\r\n      dispatch(finishLoading());\r\n      dispatch(setReqSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const getProductsPerPage =\r\n  (page: number): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const productPages = getState().products.productsPages;\r\n    const pagination = getState().products.pagination;\r\n    const lastPageWithDelProds = getState().products.lastPageWithDeletedProd;\r\n\r\n    const keyword = `?page=${page}`;\r\n\r\n    if (lastPageWithDelProds > 0 && page >= lastPageWithDelProds) {\r\n      dispatch(fetchProducts(keyword));\r\n      if (page === pagination.pages) {\r\n        dispatch(setLastPageWithDelProd(0));\r\n      }\r\n      return;\r\n    }\r\n\r\n    const productsPerPage = productPages.find((p) => p.page === page);\r\n\r\n    if (productsPerPage) {\r\n      dispatch(\r\n        setPagination({\r\n          page,\r\n          pages: pagination.pages,\r\n          pageSize: pagination.pageSize,\r\n        })\r\n      );\r\n      dispatch(setcurrentProductsPerPage(productsPerPage));\r\n      return;\r\n    }\r\n\r\n    dispatch(fetchProducts(keyword));\r\n  };\r\n\r\nexport const fetchSearchProducts =\r\n  (kw = \"\"): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const searchResults = getState().products.searchResults;\r\n    dispatch(initLoading());\r\n\r\n    try {\r\n      const response: AxiosResponse = await instance.get<IProduct[]>(\r\n        `/api/products${kw}`\r\n      );\r\n\r\n      const products: IProduct[] = response.data.products;\r\n      const page = Number(response.data.page);\r\n      const pages = Number(response.data.pages);\r\n      const pageSize = Number(response.data.pageSize);\r\n      const newSearchResult: IProductSearchResults = {\r\n        keyword: kw,\r\n        productPages: [{ page, products }],\r\n      };\r\n      const updatedSearchResults = [...searchResults, newSearchResult];\r\n\r\n      dispatch(setIsSearchResults(true));\r\n      dispatch(setSearchPagination({ page, pages, pageSize }));\r\n\r\n      dispatch(setProductSearchresults(updatedSearchResults));\r\n      dispatch(setCurrentSearchResults({ page, products }));\r\n      dispatch(finishLoading());\r\n    } catch (err: any) {\r\n      dispatch(finishLoading());\r\n      dispatch(setReqSuccess(false));\r\n      dispatch(setIsSearchResults(false));\r\n      const msgError = getMsgError(err);\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const getProductsSearch =\r\n  (page: number): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const searchResults = getState().products.searchResults;\r\n    const pagination = getState().products.searchPagination;\r\n    const kwSearch = getState().products.keyword;\r\n\r\n    const keyword = `?keyword=${kwSearch}&page=${page}`;\r\n    const kwInMemery = searchResults.find((sr) => sr.keyword === keyword);\r\n\r\n    if (kwInMemery) {\r\n      const productSearchPage = kwInMemery.productPages.find(\r\n        (p) => p.page === page\r\n      );\r\n      if (productSearchPage) {\r\n        dispatch(setIsSearchResults(true));\r\n        dispatch(\r\n          setSearchPagination({\r\n            page,\r\n            pages: pagination.pages,\r\n            pageSize: pagination.pageSize,\r\n          })\r\n        );\r\n        dispatch(setCurrentSearchResults(productSearchPage));\r\n        return;\r\n      }\r\n    }\r\n\r\n    dispatch(fetchSearchProducts(keyword));\r\n  };\r\n\r\nexport const getProductById = async (id: number) => {\r\n  try {\r\n    const response: AxiosResponse = await instance.get<IProduct>(\r\n      `/api/products/${id}`\r\n    );\r\n\r\n    return response.data;\r\n  } catch (err: any) {\r\n    const msgError = getMsgError(err);\r\n    Swal.fire(\"Error\", msgError, \"error\");\r\n  }\r\n};\r\n\r\nexport const createProduct =\r\n  (product: ICreateProduct, images?: FileList): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const productPages = getState().products.productsPages;\r\n    const pagination = getState().products.pagination;\r\n\r\n    dispatch(initLoading());\r\n    try {\r\n      const res: AxiosResponse = await instance.post<IProduct>(\r\n        `/api/products/create/`,\r\n        product\r\n      );\r\n\r\n      const newProduct: IProduct = res.data;\r\n\r\n      if (images) {\r\n        const productImages = await productImageUpload(images, newProduct._id);\r\n\r\n        if (!productImages) {\r\n          Swal.fire(\r\n            \"Error\",\r\n            \"El producto fue creado, pero hubo error al cargar las imagenes!\",\r\n            \"error\"\r\n          );\r\n        }\r\n        newProduct.images = productImages.images;\r\n        newProduct.mainImageUrl = productImages.mainImageUrl;\r\n      }\r\n\r\n      const lastProductPage = productPages.find(\r\n        (prodPage) => Number(prodPage.page) === Number(pagination.pages)\r\n      );\r\n\r\n      let productPage: IProductPages;\r\n      let updatedProductPages: IProductPages[] = [];\r\n\r\n      if (\r\n        lastProductPage &&\r\n        lastProductPage?.products.length < pagination.pageSize\r\n      ) {\r\n        productPage = {\r\n          page: lastProductPage.page,\r\n          products: [...lastProductPage.products, newProduct],\r\n        };\r\n        updatedProductPages = productPages.map((prodPage) => {\r\n          if (Number(prodPage.page) === Number(lastProductPage.page)) {\r\n            return productPage;\r\n          }\r\n\r\n          return prodPage;\r\n        });\r\n        dispatch(setcurrentProductsPerPage(productPage));\r\n      } else {\r\n        const newPage = pagination.pages + 1;\r\n        const newProductPage: IProductPages = {\r\n          page: newPage,\r\n          products: [newProduct],\r\n        };\r\n\r\n        updatedProductPages = [...productPages, newProductPage];\r\n        dispatch(\r\n          setPagination({\r\n            page: newPage,\r\n            pages: newPage,\r\n            pageSize: pagination.pageSize,\r\n          })\r\n        );\r\n        dispatch(setcurrentProductsPerPage(newProductPage));\r\n      }\r\n\r\n      //dispatch(setProducts(updatedProducts));\r\n      dispatch(setProductsPages(updatedProductPages));\r\n\r\n      dispatch(setReqSuccess(true));\r\n      dispatch(finishLoading());\r\n    } catch (err: any) {\r\n      dispatch(finishLoading());\r\n      dispatch(setReqSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      dispatch(setProductError());\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const deleteProduct =\r\n  (id: string): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const currentProdsPerPage = getState().products.currentProductsPerPage;\r\n\r\n    if (!currentProdsPerPage) {\r\n      return;\r\n    }\r\n\r\n    const productLocal = currentProdsPerPage.products.find(\r\n      (p) => Number(p._id) === Number(id)\r\n    );\r\n    if (!productLocal) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        `Producto CON ID: ${id} NO ENCONTRADO EN MEMORIA`,\r\n        \"error\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    dispatch(initLoading());\r\n    try {\r\n      const res: AxiosResponse = await instance.delete(\r\n        `/api/products/delete/${id}/`\r\n      );\r\n\r\n      dispatch(setLastPageWithDelProd(currentProdsPerPage.page));\r\n      dispatch(fetchTopProducts());\r\n\r\n      dispatch(getProductsPerPage(currentProdsPerPage.page));\r\n      dispatch(setReqSuccess(true));\r\n      dispatch(finishLoading());\r\n    } catch (err: any) {\r\n      dispatch(finishLoading());\r\n      dispatch(setReqSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      dispatch(setProductError());\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const updateProduct =\r\n  (\r\n    product: IProduct,\r\n    imagesToUpload?: FileList,\r\n    imagesToDelete?: IImage[]\r\n  ): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const productPages = getState().products.productsPages;\r\n    const currentProdsPerPage = getState().products.currentProductsPerPage;\r\n\r\n    if (!currentProdsPerPage) {\r\n      return;\r\n    }\r\n\r\n    const productLocal = currentProdsPerPage.products.find(\r\n      (p) => Number(p._id) === Number(product._id)\r\n    );\r\n\r\n    if (!productLocal) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        `PRODUCTO CON ID: ${product._id} NO ENCONTRADO EN MEMORIA`,\r\n        \"error\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    dispatch(initLoading());\r\n    try {\r\n      const res: AxiosResponse = await instance.put(\r\n        `/api/products/update/${product._id}/`,\r\n        product\r\n      );\r\n\r\n      const updatedProduct: IProduct = res.data;\r\n\r\n      if (imagesToUpload && imagesToUpload.length > 0) {\r\n        const uploadedProductImgs = await productImageUpload(\r\n          imagesToUpload,\r\n          product._id\r\n        );\r\n        const updatedProductImages = product.images\r\n          ? [...product.images, ...uploadedProductImgs.images]\r\n          : [...uploadedProductImgs];\r\n        updatedProduct.images = updatedProductImages;\r\n      }\r\n\r\n      if (imagesToDelete && imagesToDelete.length > 0) {\r\n        await deleteImage(imagesToDelete);\r\n        imagesToDelete.forEach((imgToDelete) => {\r\n          updatedProduct.images = updatedProduct.images?.filter(\r\n            (img) => Number(img._id) !== Number(imgToDelete._id)\r\n          );\r\n        });\r\n      }\r\n\r\n      const updatedProdsPerPage = currentProdsPerPage.products.map((prod) => {\r\n        if (Number(prod._id) === Number(product._id)) {\r\n          return updatedProduct;\r\n        }\r\n\r\n        return prod;\r\n      });\r\n\r\n      const updatedProdPage: IProductPages = {\r\n        page: currentProdsPerPage.page,\r\n        products: updatedProdsPerPage,\r\n      };\r\n\r\n      const updatedProdPages = updateProdPages(productPages, updatedProdPage);\r\n\r\n      dispatch(setProductsPages(updatedProdPages));\r\n      dispatch(setcurrentProductsPerPage(updatedProdPage));\r\n      dispatch(fetchTopProducts());\r\n      dispatch(setReqSuccess(true));\r\n      dispatch(finishLoading());\r\n    } catch (err: any) {\r\n      dispatch(finishLoading());\r\n      dispatch(setReqSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      dispatch(setProductError());\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n","import React from \"react\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\n\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"../../app/hooks/useForm\";\r\nimport { getProductsSearch } from \"../../features/products/productAPI\";\r\nimport { setkeyword } from \"../../features/products/productSlice\";\r\n\r\ninterface formProps {\r\n  keyword: string;\r\n}\r\n\r\nconst SearchBox = () => {\r\n  let history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [formValues, actions] = useForm<formProps>({\r\n    keyword: \"\",\r\n  });\r\n\r\n  const {\r\n    values: { keyword },\r\n  } = formValues;\r\n\r\n  const { handleInputChange, reset } = actions;\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (keyword.trim().length > 0) {\r\n      dispatch(setkeyword(keyword));\r\n      dispatch(getProductsSearch(1));\r\n      reset();\r\n      history.push(\"/\");\r\n    } else {\r\n      history.push(history.location.pathname);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} className=\"d-flex mr-2\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"keyword\"\r\n        value={keyword}\r\n        onChange={handleInputChange}\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2 ml-2\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { VFC } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { getUser, startLogout } from \"../features/Auth/authSlice\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport {\r\n  setkeyword,\r\n  setIsSearchResults,\r\n  setCurrentSearchResults,\r\n} from \"../features/products/productSlice\";\r\n\r\nconst Header: VFC = () => {\r\n  const user = useAppSelector(getUser);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    console.log(\"Logout we!\");\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  const navToHome = () => {\r\n    dispatch(setkeyword(\"/\"));\r\n    dispatch(setIsSearchResults(false));\r\n    dispatch(setCurrentSearchResults(undefined));\r\n  };\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\" onClick={navToHome}>\r\n            <Navbar.Brand>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"main-navbar-nav\" />\r\n          <Navbar.Collapse id=\"main-navbar-nav\">\r\n            <SearchBox />\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {user ? (\r\n                <NavDropdown title={user.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {user && user.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/users\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productList\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orders\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { VFC } from \"react\";\r\nimport \"./loading.css\";\r\n\r\nexport const Loading: VFC = () => {\r\n  return (\r\n    <div className=\"lds-container\">\r\n      <div className=\"lds-spinner\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  value: number;\r\n  text?: string;\r\n  color?: string;\r\n}\r\n\r\nexport const Rating: React.VFC<Props> = ({ value, text, color }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { VFC } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { IProduct } from \"../../schemas\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\n\r\nimport { setSelectedProduct } from \"../../features/products/productSlice\";\r\nimport { Rating } from \"./Rating\";\r\n\r\nexport const Product: VFC<IProduct> = (product: IProduct) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClickHandler = () => {\r\n    dispatch(setSelectedProduct(product));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={product.mainImageUrl}\r\n          onClick={onClickHandler}\r\n          className=\"card-image img-fluid\"\r\n        />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\" onClick={onClickHandler}>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <div className=\"my-3\">\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n              color={\"#f8e825\"}\r\n            />\r\n          </div>\r\n        </Card.Text>\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  variant: string;\r\n};\r\n// children?:React.ReactNode usado por default en FC\r\n\r\nexport const Message: FC<Props> = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\ninterface Props {\r\n  pages: number;\r\n  page: number;\r\n  isAdmin?: boolean;\r\n  search: boolean;\r\n  handleClick: (page: number) => void;\r\n}\r\n\r\nconst Paginate: React.FC<Props> = ({\r\n  pages,\r\n  page,\r\n  isAdmin = false,\r\n  search,\r\n  handleClick,\r\n}) => {\r\n  let numPages = [];\r\n  for (let i = 1; i <= Number(pages); i++) {\r\n    numPages.push(Number(i));\r\n  }\r\n\r\n  return (\r\n    <Pagination>\r\n      {numPages.map((x) => (\r\n        <Pagination.Item\r\n          key={x}\r\n          active={x === page}\r\n          onClick={() => handleClick(x)}\r\n        >\r\n          {x}\r\n        </Pagination.Item>\r\n      ))}\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n\r\n/*\r\n<Pagination>\r\n      {numPages.map((x) => (\r\n        <LinkContainer\r\n          key={x}\r\n          to={`${redirectTo}?keyword=${keyword}&page=${x}`}\r\n          onClick={() => dispatch(setkeyword(`/?keyword=${keyword}&page=${x}`))}\r\n        >\r\n          <Pagination.Item active={x === Number(page)}>{x}</Pagination.Item>\r\n        </LinkContainer>\r\n      ))}\r\n    </Pagination>\r\n*/\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\r\nimport {\r\n  getProductsState,\r\n  setIsSearchResults,\r\n} from \"../../features/products/productSlice\";\r\nimport { getProductsSearch } from \"../../features/products/productAPI\";\r\nimport { Product } from \"../../features/products/Product\";\r\nimport Paginate from \"../Paginate\";\r\n\r\nconst ProductSearchResults: React.FC = () => {\r\n  const productsState = useAppSelector(getProductsState);\r\n  const dispatch = useAppDispatch();\r\n  let history = useHistory();\r\n\r\n  const {\r\n    currentSearchResults,\r\n    searchPagination: pagination,\r\n    keyword,\r\n  } = productsState;\r\n\r\n  const products = currentSearchResults?.products\r\n    ? currentSearchResults.products\r\n    : [];\r\n\r\n  const handlePaginationClick = (page: number) => {\r\n    dispatch(getProductsSearch(page));\r\n  };\r\n\r\n  const resetSearchHandler = () => {\r\n    dispatch(setIsSearchResults(false));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm={12}>\r\n        <h1>Search results for {keyword}</h1>\r\n      </Col>\r\n      <Col sm={12}>\r\n        <Button variant=\"warning\" onClick={resetSearchHandler}>\r\n          Clear search results\r\n        </Button>\r\n      </Col>\r\n      {products.map((prod) => (\r\n        <Col sm={12} md={6} lg={4} xl={3} key={prod._id}>\r\n          <Product {...prod} />\r\n        </Col>\r\n      ))}\r\n      <Col sm={12}>\r\n        <Paginate\r\n          page={pagination.page}\r\n          pages={pagination.pages}\r\n          search={true}\r\n          handleClick={handlePaginationClick}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProductSearchResults;\r\n","import React, { useEffect } from \"react\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport { Loading } from \"../loading/loading\";\r\nimport { fetchTopProducts } from \"../../features/products/productAPI\";\r\nimport {\r\n  getProductsState,\r\n  setSelectedProduct,\r\n} from \"../../features/products/productSlice\";\r\nimport { IProduct } from \"../../schemas\";\r\n\r\nconst ProductCarousel = () => {\r\n  //    const topProducts = useAppSelector(getTopProducts);\r\n  const productsState = useAppSelector(getProductsState);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { loading, topProducts } = productsState;\r\n\r\n  useEffect(() => {\r\n    if (topProducts.length < 1) {\r\n      dispatch(fetchTopProducts());\r\n    }\r\n  }, [topProducts.length, dispatch]);\r\n\r\n  const onClickHandler = (product: IProduct) => {\r\n    dispatch(setSelectedProduct(product));\r\n  };\r\n\r\n  return (\r\n    <Col md={{ span: 6, offset: 3 }}>\r\n      {loading && <Loading />}\r\n      <Carousel pause=\"hover\">\r\n        {topProducts.map((product) => (\r\n          <Carousel.Item key={product._id}>\r\n            <Link\r\n              to={`/product/${product._id}`}\r\n              onClick={() => onClickHandler(product)}\r\n            >\r\n              <Image\r\n                src={product.mainImageUrl}\r\n                alt={product.name}\r\n                className=\"img-fluid carousel-image\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h4>\r\n                  {product.name} ($ {product.price})\r\n                </h4>\r\n              </Carousel.Caption>\r\n            </Link>\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React, { useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport { isLoading, isError } from \"../features/ui/uiSlice\";\r\n\r\nimport { getProductsState } from \"../features/products/productSlice\";\r\nimport { getProductsPerPage } from \"../features/products/productAPI\";\r\nimport { useAppSelector, useAppDispatch } from \"../app/hooks\";\r\nimport { Loading } from \"../components/loading/loading\";\r\nimport { Product } from \"../features/products/Product\";\r\nimport { Message } from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductSearchResults from \"../components/products/ProductSearchResults\";\r\nimport ProductCarousel from \"../components/products/ProductCarousel\";\r\n\r\nexport const HomeScreen: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const productsState = useAppSelector(getProductsState);\r\n\r\n  const error = useAppSelector(isError);\r\n  const loading = useAppSelector(isLoading);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    loading: loadingProducts,\r\n    pagination,\r\n    isSearchResults,\r\n    currentProductsPerPage,\r\n  } = productsState;\r\n\r\n  const products = currentProductsPerPage\r\n    ? currentProductsPerPage.products\r\n    : [];\r\n\r\n  useEffect(() => {\r\n    if (products.length < 1 && !isSearchResults) {\r\n      dispatch(getProductsPerPage(pagination.page));\r\n    }\r\n  }, [dispatch, products.length, isSearchResults, pagination.page]);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (error) {\r\n    return <Message variant=\"danger\">{error}</Message>;\r\n  }\r\n\r\n  const handlePaginationClick = (page: number) => {\r\n    dispatch(getProductsPerPage(page));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isSearchResults ? (\r\n        <ProductSearchResults />\r\n      ) : (\r\n        <>\r\n          <Row className=\"m-4\">\r\n            <h2 className=\"text-center\">Top products</h2>\r\n            <ProductCarousel />\r\n          </Row>\r\n          <Row>\r\n            <h1>Latest Products</h1>\r\n            {loadingProducts && <Loading />}\r\n            {products.map((product) => (\r\n              <Col sm={12} md={6} lg={4} xl={3} key={product._id}>\r\n                <Product {...product} />\r\n              </Col>\r\n            ))}\r\n            <Col sm={12}>\r\n              <Paginate\r\n                page={pagination.page}\r\n                pages={pagination.pages}\r\n                search={false}\r\n                handleClick={handlePaginationClick}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { IProduct } from \"../../schemas\";\r\n\r\ntype Props = {\r\n  qty: number;\r\n  countInStock: number;\r\n  product?: IProduct;\r\n  updateQty: Function;\r\n  updateProduct?: Function;\r\n};\r\n\r\nexport const CountInStock2: FC<Props> = ({\r\n  qty,\r\n  countInStock,\r\n  updateProduct,\r\n  updateQty,\r\n  product,\r\n}) => {\r\n  const optionsNumber: number[] = [];\r\n  for (let i = 0; i < countInStock; i++) {\r\n    optionsNumber.push(i + 1);\r\n  }\r\n  const onChangeHandler = (e: any) => {\r\n    updateQty(e);\r\n    if (product && updateProduct) {\r\n      updateProduct(product);\r\n    }\r\n  };\r\n  return (\r\n    <Form.Control\r\n      as=\"select\"\r\n      value={String(qty)}\r\n      onChange={(e) => onChangeHandler(e as any)}\r\n      className=\"mx-2\"\r\n    >\r\n      {optionsNumber.map((x) => (\r\n        <option key={x} value={x}>\r\n          {x}\r\n        </option>\r\n      ))}\r\n    </Form.Control>\r\n  );\r\n};\r\n","import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nimport { AppThunk, RootState } from \"../../app/store\";\r\nimport { ICartItem, IShippingAddress } from \"../../schemas\";\r\nimport { saveToLocalStorage } from \"../../app/helpers\";\r\n\r\nexport interface ICartState {\r\n  items: ICartItem[];\r\n  subtotal: number;\r\n  shippingAddress: IShippingAddress | undefined;\r\n  totalItems: number;\r\n  paymentMethod: string;\r\n}\r\n\r\ninterface IItems {\r\n  items: ICartItem[];\r\n  subtotal: number;\r\n  totalItems: number;\r\n}\r\n\r\nconst initialState: ICartState = {\r\n  items: [],\r\n  subtotal: 0,\r\n  shippingAddress: undefined,\r\n  totalItems: 0,\r\n  paymentMethod: \"\",\r\n};\r\n\r\nconst calcSubTotal = (items: ICartItem[]) => {\r\n  let total = 0;\r\n  items.forEach((cartItem) => {\r\n    total += cartItem.product.price * cartItem.qty;\r\n  });\r\n\r\n  const updatedTotal = +total.toFixed(2);\r\n\r\n  return updatedTotal;\r\n};\r\n\r\nconst calcTotalItems = (items: ICartItem[]) => {\r\n  const totalItems = items.reduce((acc, item) => acc + item.qty, 0);\r\n  return totalItems;\r\n};\r\n\r\nexport const addToCartLS =\r\n  (item: ICartItem): AppThunk =>\r\n  (dispatch, getState) => {\r\n    const { items } = getState().cart;\r\n    const itemInCart = items.find((i) => i.product._id === item.product._id);\r\n\r\n    let updatedItems = [];\r\n    if (itemInCart) {\r\n      updatedItems = items.map((citem) => {\r\n        if (citem.product._id === itemInCart.product._id) {\r\n          item.qty += citem.qty;\r\n          return item;\r\n        }\r\n        return citem;\r\n      });\r\n    } else {\r\n      updatedItems = [...items, item];\r\n    }\r\n    const updatedSubTotal = calcSubTotal(updatedItems);\r\n    const updatedTotalItems = calcTotalItems(updatedItems);\r\n\r\n    localStorage.setItem(\r\n      \"cartItems\",\r\n      JSON.stringify({\r\n        items: updatedItems,\r\n        subtotal: updatedSubTotal,\r\n        totalItems: updatedTotalItems,\r\n      })\r\n    );\r\n    dispatch(\r\n      updateItems({\r\n        items: updatedItems,\r\n        subtotal: updatedSubTotal,\r\n        totalItems: updatedTotalItems,\r\n      })\r\n    );\r\n  };\r\n\r\nexport const updateCartLS =\r\n  (item: ICartItem): AppThunk =>\r\n  (dispatch, getState) => {\r\n    const { items } = getState().cart;\r\n    const itemInCart = items.find((i) => i.product._id === item.product._id);\r\n\r\n    let updatedItems = [];\r\n    if (itemInCart) {\r\n      updatedItems = items.map((citem) =>\r\n        citem.product._id === itemInCart.product._id ? item : citem\r\n      );\r\n    } else {\r\n      updatedItems = [...items, item];\r\n    }\r\n    const updatedSubTotal = calcSubTotal(updatedItems);\r\n    const updatedTotalItems = calcTotalItems(updatedItems);\r\n\r\n    localStorage.setItem(\r\n      \"cartItems\",\r\n      JSON.stringify({\r\n        items: updatedItems,\r\n        subtotal: updatedSubTotal,\r\n        totalItems: updatedTotalItems,\r\n      })\r\n    );\r\n    dispatch(\r\n      updateItems({\r\n        items: updatedItems,\r\n        subtotal: updatedSubTotal,\r\n        totalItems: updatedTotalItems,\r\n      })\r\n    );\r\n  };\r\n\r\nexport const removeFromCartLS =\r\n  (id: string): AppThunk =>\r\n  (dispatch, getState) => {\r\n    const { items } = getState().cart;\r\n    const updatedItems = items.filter((i) => i.product._id !== id);\r\n    const updatedSubTotal = calcSubTotal(updatedItems);\r\n    const updatedTotalItems = calcTotalItems(updatedItems);\r\n    localStorage.setItem(\r\n      \"cartItems\",\r\n      JSON.stringify({\r\n        items: updatedItems,\r\n        subtotal: updatedSubTotal,\r\n        totalItems: updatedTotalItems,\r\n      })\r\n    );\r\n    dispatch(\r\n      updateItems({\r\n        items: updatedItems,\r\n        subtotal: updatedSubTotal,\r\n        totalItems: updatedTotalItems,\r\n      })\r\n    );\r\n  };\r\n\r\nexport const updateShippingAddressLS = createAsyncThunk(\r\n  \"cart/shippingAddressLS\",\r\n  (shippingAddress: IShippingAddress) => {\r\n    saveToLocalStorage(\"shippingAddress\", shippingAddress);\r\n\r\n    return shippingAddress;\r\n  }\r\n);\r\n\r\nexport const savePaymentMethodLS = createAsyncThunk(\r\n  \"cart/paymentMethodLS\",\r\n  (pMethod: string) => {\r\n    saveToLocalStorage(\"paymentMethod\", pMethod);\r\n    return pMethod;\r\n  }\r\n);\r\n\r\nexport const resetCartLS = createAsyncThunk(\"cart/reset\", () => {\r\n  localStorage.removeItem(\"cartItems\");\r\n});\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    updateItems: (state, action: PayloadAction<IItems>) => {\r\n      state.items = action.payload.items;\r\n      state.subtotal = action.payload.subtotal;\r\n      state.totalItems = action.payload.totalItems;\r\n    },\r\n    updateShippingAddress: (state, action: PayloadAction<IShippingAddress>) => {\r\n      state.shippingAddress = action.payload;\r\n    },\r\n    updatePaymentMethod: (state, action: PayloadAction<string>) => {\r\n      state.paymentMethod = action.payload;\r\n    },\r\n    resetCart: (state) => {\r\n      state.items = [];\r\n      state.paymentMethod = \"\";\r\n      state.shippingAddress = undefined;\r\n      state.subtotal = 0;\r\n      state.totalItems = 0;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(\r\n        updateShippingAddressLS.fulfilled,\r\n        (state, action: PayloadAction<IShippingAddress>) => {\r\n          state.shippingAddress = action.payload;\r\n        }\r\n      )\r\n      .addCase(\r\n        savePaymentMethodLS.fulfilled,\r\n        (state, action: PayloadAction<string>) => {\r\n          state.paymentMethod = action.payload;\r\n        }\r\n      )\r\n      .addCase(resetCartLS.fulfilled, (state) => {\r\n        state.items = [];\r\n        state.paymentMethod = \"\";\r\n        state.shippingAddress = undefined;\r\n        state.subtotal = 0;\r\n        state.totalItems = 0;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  updateItems,\r\n  updateShippingAddress,\r\n  updatePaymentMethod,\r\n  resetCart,\r\n} = cartSlice.actions;\r\n\r\nexport const getCartItems = (state: RootState) => state.cart.items;\r\nexport const getSubtotal = (state: RootState) => state.cart.subtotal;\r\nexport const getTotalItems = (state: RootState) => state.cart.totalItems;\r\nexport const getShippingAddress = (state: RootState) =>\r\n  state.cart.shippingAddress;\r\n\r\nexport const getCart = (state: RootState) => state.cart;\r\n\r\nexport default cartSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { IProductReview } from \"../../schemas\";\r\n\r\nexport type ProductReviewState = {\r\n  productId: string;\r\n  productReviews: IProductReview[];\r\n};\r\n\r\ntype ReviewsState = {\r\n  loading: boolean;\r\n  loadingReview: boolean;\r\n  createReviewSuccess: boolean;\r\n  selectedProductReviews: IProductReview[] | undefined;\r\n  reviews: ProductReviewState[];\r\n};\r\n\r\nconst initialState: ReviewsState = {\r\n  loading: false,\r\n  loadingReview: false,\r\n  createReviewSuccess: false,\r\n  selectedProductReviews: undefined,\r\n  reviews: [],\r\n};\r\n\r\nexport const reviewsSlice = createSlice({\r\n  name: \"reviews\",\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setLoadingReview: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setCreateReviewSuccess: (state, action: PayloadAction<boolean>) => {\r\n      state.createReviewSuccess = action.payload;\r\n    },\r\n    setReviews: (state, action: PayloadAction<ProductReviewState[]>) => {\r\n      state.reviews = action.payload;\r\n    },\r\n    setSelectedProductReviews: (\r\n      state,\r\n      action: PayloadAction<IProductReview[] | undefined>\r\n    ) => {\r\n      state.selectedProductReviews = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setLoading,\r\n  setReviews,\r\n  setSelectedProductReviews,\r\n  setLoadingReview,\r\n  setCreateReviewSuccess,\r\n} = reviewsSlice.actions;\r\n\r\nexport const getReviewsState = (state: RootState) => state.reviews.reviews;\r\nexport const getLoadingReviews = (state: RootState) => state.reviews.loading;\r\nexport const getSelectedProductReviews = (state: RootState) =>\r\n  state.reviews.selectedProductReviews;\r\n\r\nexport const getLoadingReview = (state: RootState) =>\r\n  state.reviews.loadingReview;\r\n\r\nexport const getCreateReviewSuccess = (state: RootState) =>\r\n  state.reviews.createReviewSuccess;\r\n\r\nexport default reviewsSlice.reducer;\r\n","import { AxiosResponse } from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { instance } from \"../../app/axiosInstance\";\r\nimport { AppThunk } from \"../../app/store\";\r\n\r\nimport { getMsgError } from \"../../app/helpers\";\r\nimport {\r\n  setLoading,\r\n  setReviews,\r\n  ProductReviewState,\r\n  setSelectedProductReviews,\r\n  setLoadingReview,\r\n  setCreateReviewSuccess,\r\n} from \"./ReviewsSlice\";\r\nimport {\r\n  setSelectedProduct,\r\n  setProducts,\r\n  setProductsPages,\r\n  setcurrentProductsPerPage,\r\n} from \"../products/productSlice\";\r\nimport {\r\n  IReviewCreate,\r\n  IProductReview,\r\n  IProductPages,\r\n  IProduct,\r\n} from \"../../schemas\";\r\nimport { updateProdPages, getProductsPerPage } from \"../products/productAPI\";\r\n\r\nexport const createProductReview =\r\n  (productId: string, review: IReviewCreate): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const productsReviews = getState().reviews.reviews;\r\n    const productPages = getState().products.productsPages;\r\n    const currentProdsPerPage = getState().products.currentProductsPerPage;\r\n    const pagination = getState().products.pagination;\r\n    //const products = getState().products.products;\r\n\r\n    if (!currentProdsPerPage) {\r\n      return;\r\n    }\r\n\r\n    let productToUpdate: IProduct | undefined;\r\n    productToUpdate = currentProdsPerPage.products.find(\r\n      (prod) => Number(prod._id) === Number(productId)\r\n    );\r\n\r\n    if (!productToUpdate) {\r\n      const msg = `Loading product in the background, please wait 2s and try again`;\r\n      dispatch(setLoadingReview(false));\r\n      dispatch(setCreateReviewSuccess(false));\r\n      dispatch(getProductsPerPage(pagination.page));\r\n      Swal.fire(\"Error\", msg, \"error\");\r\n      return;\r\n    }\r\n\r\n    dispatch(setLoadingReview(true));\r\n\r\n    try {\r\n      const response: AxiosResponse = await instance.post(\r\n        `/api/products/${productId}/reviews/create/`,\r\n        review\r\n      );\r\n\r\n      const data = response.data;\r\n      const newProductReview: IProductReview = { ...data.review };\r\n\r\n      let updatedProducReviews2: IProductReview[] = [];\r\n      const updatedProductsReviews: ProductReviewState[] = productsReviews.map(\r\n        (review: ProductReviewState) => {\r\n          if (Number(review.productId) === Number(productId)) {\r\n            updatedProducReviews2 = [\r\n              ...review.productReviews,\r\n              newProductReview,\r\n            ];\r\n            return {\r\n              productId,\r\n              productReviews: updatedProducReviews2,\r\n            };\r\n          }\r\n          return review;\r\n        }\r\n      );\r\n\r\n      const updatedProduct = {\r\n        ...productToUpdate,\r\n        rating: data.product_rating,\r\n        numReviews: data.product_num_reviews,\r\n      };\r\n\r\n      const updatedProdsPerPage = currentProdsPerPage.products.map((prod) => {\r\n        if (Number(prod._id) === Number(productId)) {\r\n          return updatedProduct;\r\n        }\r\n\r\n        return prod;\r\n      });\r\n\r\n      const updatedProdPage: IProductPages = {\r\n        page: currentProdsPerPage.page,\r\n        products: updatedProdsPerPage,\r\n      };\r\n      const updatedProdPages = updateProdPages(productPages, updatedProdPage);\r\n\r\n      dispatch(setReviews(updatedProductsReviews));\r\n      dispatch(setSelectedProduct(updatedProduct));\r\n\r\n      dispatch(setSelectedProductReviews(updatedProducReviews2));\r\n      dispatch(setProductsPages(updatedProdPages));\r\n      dispatch(setcurrentProductsPerPage(updatedProdPage));\r\n      dispatch(setLoadingReview(false));\r\n      dispatch(setCreateReviewSuccess(true));\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"success\",\r\n        title: \"Your review has been submitted!\",\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    } catch (err: any) {\r\n      dispatch(setLoadingReview(false));\r\n      dispatch(setCreateReviewSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const fetchProductReviews =\r\n  (productId: string): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const allProductReviews = getState().reviews.reviews;\r\n    dispatch(setLoading(true));\r\n\r\n    try {\r\n      const response: AxiosResponse = await instance.get(\r\n        `/api/products/${productId}/reviews/`\r\n      );\r\n\r\n      const productReviews: IProductReview[] = response.data;\r\n\r\n      const updatedAllProdReviews = [\r\n        ...allProductReviews,\r\n        { productId, productReviews },\r\n      ];\r\n\r\n      dispatch(setReviews(updatedAllProdReviews));\r\n      dispatch(setSelectedProductReviews(productReviews));\r\n\r\n      dispatch(setLoading(false));\r\n    } catch (err: any) {\r\n      dispatch(setLoading(false));\r\n      const msgError = getMsgError(err);\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const getProductReviews =\r\n  (productId: string): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const allProductReviews = getState().reviews.reviews;\r\n\r\n    const selectedProductReviews = allProductReviews.find(\r\n      (review) => Number(review.productId) === Number(productId)\r\n    );\r\n\r\n    if (selectedProductReviews) {\r\n      dispatch(\r\n        setSelectedProductReviews(selectedProductReviews.productReviews)\r\n      );\r\n      return;\r\n    }\r\n\r\n    dispatch(fetchProductReviews(productId));\r\n  };\r\n","import { VFC } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { Rating } from \"../../features/products/Rating\";\r\nimport { IProductReview } from \"../../schemas\";\r\n\r\ntype params = {\r\n  reviews: IProductReview[];\r\n  numReviews: number;\r\n};\r\n\r\nexport const ProductReviews: VFC<params> = ({ reviews, numReviews }) => {\r\n  return (\r\n    <ListGroup>\r\n      {reviews.map((review) => (\r\n        <ListGroup.Item key={review._id}>\r\n          <strong>{review.name}</strong>\r\n          <Rating value={review.rating} color={\"#f8e825\"} />\r\n          <p>{review.createdAt.substring(0, 10)}</p>\r\n          <p>{review.comment}</p>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n","import React, { VFC, useState, useEffect } from \"react\";\r\nimport { ListGroup, Button, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { getAuthState } from \"../../features/Auth/authSlice\";\r\nimport { useForm } from \"../../app/hooks/useForm\";\r\nimport {\r\n  getLoadingReview,\r\n  getCreateReviewSuccess,\r\n} from \"../../features/Reviews/ReviewsSlice\";\r\nimport { Loading } from \"../loading/loading\";\r\nimport { Message } from \"../Message\";\r\nimport { createProductReview } from \"../../features/Reviews/ReviewsAPI\";\r\n\r\ninterface formProps {\r\n  rating: string;\r\n  comment: string;\r\n}\r\n\r\ninterface Props {\r\n  productId: string;\r\n}\r\n\r\nexport const WriteReview: VFC<Props> = ({ productId }) => {\r\n  const dispatch = useAppDispatch();\r\n  const userState = useAppSelector(getAuthState);\r\n  const isProductReviewLoading = useAppSelector(getLoadingReview);\r\n  const reviewSuccess = useAppSelector(getCreateReviewSuccess);\r\n\r\n  const { user } = userState;\r\n\r\n  const [formValues, actions] = useForm<formProps>({\r\n    rating: \"\",\r\n    comment: \"\",\r\n  });\r\n\r\n  const {\r\n    values: { rating, comment },\r\n  } = formValues;\r\n  const { handleInputChange, reset } = actions;\r\n\r\n  useEffect(() => {\r\n    if (reviewSuccess) {\r\n      reset();\r\n    }\r\n  }, [reviewSuccess, reset]);\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(createProductReview(productId, { rating, comment }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4>Write a Review</h4>\r\n      {isProductReviewLoading && <Loading />}\r\n      <ListGroup>\r\n        <ListGroup.Item>\r\n          {user ? (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"rating\">\r\n                <Form.Label>Rating</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={rating}\r\n                  name=\"rating\"\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"\">Select ...</option>\r\n                  <option value=\"1\">1 - Poor</option>\r\n                  <option value=\"2\">2 - Fair</option>\r\n                  <option value=\"3\">3 - Good</option>\r\n                  <option value=\"4\">4 - Very Good</option>\r\n                  <option value=\"5\">5 - Excellent</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"comment\">\r\n                <Form.Label>Review</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  name=\"comment\"\r\n                  value={comment}\r\n                  onChange={handleInputChange}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n                disabled={isProductReviewLoading}\r\n                className=\"mt-3\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          ) : (\r\n            <Message variant=\"info\">\r\n              Please <Link to=\"/login\">login</Link> to write a review\r\n            </Message>\r\n          )}\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n","import React, { VFC, useState, useEffect } from \"react\";\r\nimport { Row, Col, ListGroup, Button, Card, Carousel } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { IProduct } from \"../../schemas\";\r\nimport { Rating } from \"./Rating\";\r\nimport { CountInStock2 } from \"./CountInStock2\";\r\nimport { addToCartLS } from \"../Cart/cartSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { removeSelectedProduct } from \"./productSlice\";\r\nimport {\r\n  getLoadingReviews,\r\n  getSelectedProductReviews,\r\n  getLoadingReview,\r\n  setCreateReviewSuccess,\r\n} from \"../Reviews/ReviewsSlice\";\r\nimport { getProductReviews } from \"../Reviews/ReviewsAPI\";\r\nimport { Loading } from \"../../components/loading/loading\";\r\nimport { ProductReviews } from \"../../components/products/ProductReviews\";\r\nimport { Message } from \"../../components/Message\";\r\n\r\nimport { WriteReview } from \"../../components/Review/WriteReview\";\r\n\r\nexport const ProductDetails: VFC<IProduct> = (product: IProduct) => {\r\n  const [qty, setQty] = useState<number>(1);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const isProductReviewsLoading = useAppSelector(getLoadingReviews);\r\n  const isProductReviewLoading = useAppSelector(getLoadingReview);\r\n  const selectedProductReviews = useAppSelector(getSelectedProductReviews);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !selectedProductReviews ||\r\n      (selectedProductReviews &&\r\n        Number(selectedProductReviews[0].product) !== Number(product._id))\r\n    ) {\r\n      dispatch(getProductReviews(product._id));\r\n    }\r\n\r\n    return () => {\r\n      dispatch(removeSelectedProduct());\r\n      // dispatch(setSelectedProductReviews(undefined));\r\n      dispatch(setCreateReviewSuccess(false));\r\n    };\r\n  }, [dispatch, selectedProductReviews, product._id]);\r\n\r\n  const updateQty = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = e.target.value;\r\n    setQty(Number(newValue));\r\n  };\r\n\r\n  const addToCartHandler = () => {\r\n    const item = {\r\n      product: product,\r\n      qty: qty,\r\n    };\r\n    dispatch(addToCartLS(item));\r\n    history.push(`/cart/${product._id}?qty=${qty}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={4}>\r\n          {product.images ? (\r\n            <Carousel pause=\"hover\">\r\n              {product.images.map((image) => {\r\n                return (\r\n                  <Carousel.Item interval={3000} key={image.url}>\r\n                    <img\r\n                      className=\"img-fluid \"\r\n                      src={image.url}\r\n                      alt={product.name}\r\n                    />\r\n                  </Carousel.Item>\r\n                );\r\n              })}\r\n            </Carousel>\r\n          ) : null}\r\n        </Col>\r\n        <Col md={4}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n                color={\"#f8e825\"}\r\n              />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n            <ListGroup.Item>Description: ${product.description}</ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Price:</Col>\r\n                  <Col>\r\n                    <strong>${product.price}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Status:</Col>\r\n                  <Col>\r\n                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {product.countInStock > 0 && (\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Qty</Col>\r\n                    <Col xs=\"auto\">\r\n                      <CountInStock2\r\n                        qty={qty}\r\n                        countInStock={product.countInStock}\r\n                        updateQty={updateQty}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={product.countInStock === 0}\r\n                  onClick={addToCartHandler}\r\n                >\r\n                  ADD TO CART\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>\r\n          <h3>Reviews</h3>\r\n          {isProductReviewsLoading ? (\r\n            <Loading />\r\n          ) : selectedProductReviews && selectedProductReviews.length > 0 ? (\r\n            <ProductReviews\r\n              reviews={[...selectedProductReviews]}\r\n              numReviews={product.numReviews}\r\n            />\r\n          ) : (\r\n            <>\r\n              <Message variant=\"info\">No Reviews</Message>\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col md={6}>\r\n          {isProductReviewLoading && <Loading />}\r\n          <WriteReview productId={product._id} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React, { VFC, useEffect } from \"react\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\n\r\nimport {\r\n  getSelectedProduct,\r\n  setSelectedProductById,\r\n} from \"../features/products/productSlice\";\r\nimport { isLoading, isError } from \"../features/ui/uiSlice\";\r\n\r\nimport { ProductDetails } from \"../features/products/productDetails\";\r\nimport { Loading } from \"../components/loading/loading\";\r\nimport { Message } from \"../components/Message\";\r\n\r\ntype TParams = { id: string };\r\n\r\nexport const ProductScreen: VFC<any> = ({\r\n  match,\r\n}: RouteComponentProps<TParams>) => {\r\n  const dispatch = useAppDispatch();\r\n  const product = useAppSelector(getSelectedProduct);\r\n  let loading = useAppSelector(isLoading);\r\n  let error = useAppSelector(isError);\r\n  const match_id = match.params.id;\r\n\r\n  useEffect(() => {\r\n    if (!product && !loading) {\r\n      dispatch(setSelectedProductById(match_id));\r\n    }\r\n  }, [product, dispatch, match_id, loading]);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-2\">\r\n        Go Back\r\n      </Link>\r\n      {product ? (\r\n        <ProductDetails {...product} />\r\n      ) : (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { VFC, useState, useEffect, useCallback } from \"react\";\r\nimport { ListGroup, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ICartItem, IProduct } from \"../../schemas\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport { removeFromCartLS, updateCartLS } from \"../Cart/cartSlice\";\r\nimport { CountInStock2 } from \"../products/CountInStock2\";\r\n\r\ninterface Props {\r\n  items: ICartItem[];\r\n}\r\n\r\nexport const CartItems: VFC<Props> = ({ items }) => {\r\n  const [qty, setQty] = useState<number | undefined>(undefined);\r\n  const [cartProduct, setCartProduct] = useState<IProduct | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const updateQty = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = e.target.value;\r\n    setQty(Number(newValue));\r\n  };\r\n\r\n  const updateProduct = (product: IProduct) => {\r\n    setCartProduct(product);\r\n  };\r\n\r\n  const removeProductFromCart = (id: string) => {\r\n    dispatch(removeFromCartLS(id));\r\n  };\r\n\r\n  const addToCartHandlerCb = useCallback(() => {\r\n    const addToCartHandler = (product: IProduct | undefined) => {\r\n      const quantity = qty || 1;\r\n      if (product) {\r\n        const item = {\r\n          product,\r\n          qty: quantity,\r\n        };\r\n        dispatch(updateCartLS(item));\r\n      }\r\n    };\r\n    addToCartHandler(cartProduct);\r\n  }, [cartProduct, dispatch, qty]);\r\n\r\n  useEffect(() => {\r\n    addToCartHandlerCb();\r\n  }, [addToCartHandlerCb]);\r\n\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {items.map((item) => (\r\n        <ListGroup.Item key={item.product._id}>\r\n          <Row>\r\n            <Col xs={2}>\r\n              <Image\r\n                src={item.product.mainImageUrl}\r\n                alt={item.product.name}\r\n                fluid\r\n                rounded\r\n              />\r\n            </Col>\r\n            <Col xs=\"auto\" md={3}>\r\n              <Link to={`/product/${item.product._id}`}>\r\n                {item.product.name}\r\n              </Link>\r\n            </Col>\r\n            <Col xs={3}>${item.product.price}</Col>\r\n\r\n            <Col xs={2} md={3}>\r\n              <CountInStock2\r\n                qty={item.qty}\r\n                product={item.product}\r\n                updateQty={updateQty}\r\n                updateProduct={updateProduct}\r\n                countInStock={item.product.countInStock}\r\n              />\r\n            </Col>\r\n            <Col xs={1} md={1}>\r\n              <Button\r\n                type=\"button\"\r\n                size=\"sm\"\r\n                variant=\"danger\"\r\n                onClick={() => removeProductFromCart(item.product._id)}\r\n              >\r\n                <i className=\"fas fa-trash\"></i>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { ListGroup, Card, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getSubtotal, getTotalItems } from \"./cartSlice\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\n\r\nexport const Subtotal: FC = () => {\r\n  const history = useHistory();\r\n\r\n  const subtotal = useAppSelector(getSubtotal);\r\n  const totalItems = useAppSelector(getTotalItems);\r\n\r\n  const checkOutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n  return (\r\n    <Card>\r\n      <ListGroup.Item>\r\n        <h3>{totalItems} items</h3>\r\n        <h5>Subtotal: ${subtotal}</h5>\r\n      </ListGroup.Item>\r\n\r\n      <ListGroup.Item>\r\n        <Button type=\"button\" className=\"btn-block\" onClick={checkOutHandler}>\r\n          Proced To Checkout\r\n        </Button>\r\n      </ListGroup.Item>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getCartItems } from \"../features/Cart/cartSlice\";\r\nimport { useAppSelector } from \"../app/hooks\";\r\nimport { Message } from \"../components/Message\";\r\nimport { CartItems } from \"../features/Cart/CartItems\";\r\nimport { Subtotal } from \"../features/Cart/Subtotal\";\r\n\r\nexport const CartScreen = () => {\r\n  console.log(\"Iniciando CARTSCREEN\");\r\n  const cartItems = useAppSelector(getCartItems);\r\n\r\n  // const showSubTotal = () => {\r\n  //   if (cartItems.length === 0) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   return <Subtotal />;\r\n  // };\r\n\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"warning\">\r\n            Your cart is empty <Link to=\"/\">Go back</Link>{\" \"}\r\n          </Message>\r\n        ) : (\r\n          <CartItems items={cartItems} />\r\n        )}\r\n      </Col>\r\n      {/* <Col md={4}>{showSubTotal()}</Col> */}\r\n      {cartItems.length === 0 ? undefined : (\r\n        <Col md={4} className=\"mt-5\">\r\n          <Subtotal />\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n","import React, { VFC } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport const LoadSpinner: VFC = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      variant=\"success\"\r\n      role=\"status\"\r\n      style={{\r\n        height: \"50px\",\r\n        width: \"50px\",\r\n        margin: \"auto\",\r\n        display: \"inline-block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { useForm } from \"../app/hooks/useForm\";\r\nimport { Message } from \"../components/Message\";\r\n// import { Loading } from \"../components/loading/loading\";\r\nimport { isChecking, getUser } from \"../features/Auth/authSlice\";\r\nimport { isError, removeError } from \"../features/ui/uiSlice\";\r\nimport { startLogin } from \"../features/Auth/authAPI\";\r\nimport { LoadSpinner } from \"../components/LoadSpinner\";\r\n\r\nexport const LoginScreen: FC<RouteComponentProps> = ({ location, history }) => {\r\n  const dispatch = useAppDispatch();\r\n  const checking = useAppSelector(isChecking);\r\n  const error = useAppSelector(isError);\r\n  const user = useAppSelector(getUser);\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  interface formProps {\r\n    email: string;\r\n    password: string;\r\n  }\r\n\r\n  const [formValues, actions] = useForm<formProps>({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const {\r\n    values: { email, password },\r\n  } = formValues;\r\n  const { handleInputChange, reset } = actions;\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(startLogin(email, password));\r\n\r\n    if (!!error && !!checking) {\r\n      reset();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(removeError());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, user, redirect]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          <h1>Sign In</h1>\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"mt-2\"\r\n              disabled={checking}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            {checking ? <LoadSpinner /> : undefined}\r\n          </Form>\r\n\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              <p>\r\n                New Customer?\r\n                <Link\r\n                  to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n                >\r\n                  Register\r\n                </Link>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import { AxiosResponse } from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { AppThunk } from \"../../app/store\";\r\nimport { initLogin, finishLogin, login } from \"./authSlice\";\r\nimport { getMsgError } from \"../../app/helpers\";\r\nimport { instance } from \"../../app/axiosInstance\";\r\nimport { setError } from \"../ui/uiSlice\";\r\nimport { IUser } from \"../../schemas\";\r\nimport { saveToLocalStorage } from \"../../app/helpers\";\r\n\r\nexport const startLogin =\r\n  (email: string, password: string): AppThunk =>\r\n  async (dispatch) => {\r\n    dispatch(initLogin());\r\n\r\n    try {\r\n      const response: AxiosResponse = await instance.post(\"/api/users/login/\", {\r\n        username: email,\r\n        password: password,\r\n      });\r\n\r\n      // console.log(response.data);\r\n\r\n      const user: IUser = {\r\n        _id: response.data._id,\r\n        name: response.data.name,\r\n        email: response.data.email,\r\n        token: response.data.token,\r\n        isAdmin: response.data.isAdmin,\r\n      };\r\n      saveToLocalStorage(\"user\", user);\r\n      dispatch(login(user));\r\n      dispatch(finishLogin());\r\n    } catch (err: any) {\r\n      dispatch(finishLogin());\r\n      const msgError = getMsgError(err);\r\n      dispatch(setError(msgError));\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const startUserRegister =\r\n  (name: string, email: string, password: string): AppThunk =>\r\n  async (dispatch) => {\r\n    dispatch(initLogin());\r\n\r\n    try {\r\n      const response: AxiosResponse = await instance.post(\r\n        \"/api/users/register/\",\r\n        { email: email, password: password, name: name }\r\n      );\r\n\r\n      const user: IUser = {\r\n        _id: response.data._id,\r\n        name: response.data.name,\r\n        email: response.data.email,\r\n        token: response.data.token,\r\n      };\r\n      // Guardar a localStorage\r\n      saveToLocalStorage(\"user\", user);\r\n      dispatch(login(user));\r\n      dispatch(finishLogin());\r\n    } catch (err: any) {\r\n      dispatch(finishLogin());\r\n      const msgError = getMsgError(err);\r\n      dispatch(setError(msgError));\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const updateUserProfile =\r\n  (name: string, email: string, password: string): AppThunk =>\r\n  async (dispatch) => {\r\n    dispatch(initLogin());\r\n\r\n    try {\r\n      const response: AxiosResponse = await instance.put(\r\n        \"/api/users/profile/update/\",\r\n        { email: email, password: password, name: name }\r\n      );\r\n\r\n      const user: IUser = {\r\n        _id: response.data._id,\r\n        name: response.data.name,\r\n        email: response.data.email,\r\n        token: response.data.token,\r\n      };\r\n      // Guardar a localStorage\r\n      saveToLocalStorage(\"user\", user);\r\n      dispatch(login(user));\r\n      dispatch(finishLogin());\r\n    } catch (err: any) {\r\n      dispatch(finishLogin());\r\n      const msgError = getMsgError(err);\r\n      dispatch(setError(msgError));\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { useForm } from \"../app/hooks/useForm\";\r\nimport { Message } from \"../components/Message\";\r\nimport { isChecking, getUser } from \"../features/Auth/authSlice\";\r\nimport { isError, removeError } from \"../features/ui/uiSlice\";\r\nimport { startUserRegister } from \"../features/Auth/authAPI\";\r\nimport { LoadSpinner } from \"../components/LoadSpinner\";\r\n\r\nexport const RegisterScreen: FC<RouteComponentProps> = ({\r\n  location,\r\n  history,\r\n}) => {\r\n  const [message, setMessage] = useState<string | undefined>(undefined);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const checking = useAppSelector(isChecking);\r\n  const error = useAppSelector(isError);\r\n  const user = useAppSelector(getUser);\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  interface formProps {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n  }\r\n\r\n  const [formValues, actions] = useForm<formProps>({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    values: { name, email, password, confirmPassword },\r\n  } = formValues;\r\n  const { handleInputChange, reset } = actions;\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(startUserRegister(name, email, password));\r\n    }\r\n\r\n    if (!!error && !!checking) {\r\n      reset();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(removeError());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, user, redirect]);\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          <h1>Sign In</h1>\r\n          {message && <Message variant=\"danger\">{message}</Message>}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter your name\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmpassword\">\r\n              <Form.Label>confirm Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                name=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"mt-2\"\r\n              disabled={checking}\r\n            >\r\n              Register\r\n            </Button>\r\n            {checking ? <LoadSpinner /> : undefined}\r\n          </Form>\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              <p>\r\n                Have an Account?\r\n                <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n                  Sign In\r\n                </Link>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { RootState } from \"../../app/store\";\r\nimport { IOrderInDetails } from \"../../schemas\";\r\n\r\ntype OrdersState = {\r\n  isLoading: boolean;\r\n  orders: IOrderInDetails[];\r\n};\r\n\r\nconst initialState: OrdersState = {\r\n  isLoading: false,\r\n  orders: [],\r\n};\r\n\r\nexport const OrdersSlice = createSlice({\r\n  name: \"orderList\",\r\n  initialState,\r\n  reducers: {\r\n    setOrders: (state, action: PayloadAction<IOrderInDetails[]>) => {\r\n      state.orders = action.payload;\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLoading, setOrders } = OrdersSlice.actions;\r\n\r\nexport const getOrdersState = (state: RootState) => state.orders;\r\n\r\nexport default OrdersSlice.reducer;\r\n","import { AxiosResponse } from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { instance } from \"../../app/axiosInstance\";\r\nimport { AppThunk } from \"../../app/store\";\r\nimport {\r\n  IOrderInDetails,\r\n  IOrderOut,\r\n  IOrderItem,\r\n  IProductPages,\r\n} from \"../../schemas\";\r\nimport {\r\n  setCurrentOrder,\r\n  setSuccess,\r\n  startLoadingOrder,\r\n  finishLoadingOrder,\r\n  setPrices,\r\n  setOrders,\r\n  setOrderError,\r\n} from \"./MyOrdersSlice\";\r\n\r\nimport {\r\n  setProductsPages,\r\n  setcurrentProductsPerPage,\r\n} from \"../products/productSlice\";\r\n\r\nimport { startLoading, stopLoading, setError } from \"../ui/uiSlice\";\r\nimport { resetCartLS } from \"../Cart/cartSlice\";\r\nimport { getMsgError } from \"../../app/helpers\";\r\nimport { setOrders as setAllOrders } from \"../Orders/OrdersSlice\";\r\n\r\nconst updateProducQtys = (\r\n  orderItems: IOrderItem[],\r\n  prodPages: IProductPages[]\r\n) => {\r\n  console.log(\"prodPages before qty update: \", prodPages);\r\n  console.log(\"orderedItems: \", orderItems);\r\n  const updatedProdPages = prodPages.map((prodPage) => {\r\n    const prodPageUpdated: IProductPages = {\r\n      page: prodPage.page,\r\n      products: [],\r\n    };\r\n\r\n    prodPage.products.forEach((product) => {\r\n      const filter = orderItems.find(\r\n        (ordItem) => Number(ordItem.product) === Number(product._id)\r\n      );\r\n      if (filter) {\r\n        const updatedProduct = {\r\n          ...product,\r\n          countInStock: product.countInStock - filter.qty,\r\n        };\r\n        prodPageUpdated.products.push(updatedProduct);\r\n      } else {\r\n        prodPageUpdated.products.push(product);\r\n      }\r\n    });\r\n\r\n    return prodPageUpdated;\r\n  });\r\n  console.log(\"prodPages after qty update: \", updatedProdPages);\r\n  return updatedProdPages;\r\n};\r\n\r\nexport const createOrder =\r\n  (order: IOrderOut): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const prodPages = getState().products.productsPages;\r\n    dispatch(startLoading());\r\n    try {\r\n      const response: AxiosResponse = await instance.post(\r\n        \"/api/orders/add/\",\r\n        order\r\n      );\r\n\r\n      const newOrder: IOrderInDetails = {\r\n        _id: response.data._id,\r\n        orderItems: response.data.orderItems,\r\n        paymentMethod: response.data.paymentMethod,\r\n        shippingAddress: response.data.shippingAddress,\r\n        shippingPrice: response.data.shippingPrice,\r\n        subTotal: response.data.subTotal,\r\n        taxPrice: response.data.taxPrice,\r\n        totalPrice: response.data.totalPrice,\r\n        createdAt: response.data.createdAt,\r\n        deleveredAt: response.data.deleveredAt,\r\n        isDelivered: response.data.isDelivered,\r\n        isPaid: response.data.isPaid,\r\n        paidAt: response.data.paidAt,\r\n        user: response.data.user,\r\n      };\r\n\r\n      const updatedProdPages = updateProducQtys(newOrder.orderItems, prodPages);\r\n\r\n      dispatch(setCurrentOrder(newOrder));\r\n      dispatch(setAllOrders([newOrder]));\r\n      dispatch(setProductsPages(updatedProdPages));\r\n      dispatch(setcurrentProductsPerPage(undefined));\r\n      dispatch(setSuccess(true));\r\n      dispatch(resetCartLS());\r\n      dispatch(stopLoading());\r\n    } catch (err: any) {\r\n      dispatch(stopLoading());\r\n      dispatch(setSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      dispatch(setError(msgError));\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\n// const fetchUserOrders = async () => {\r\n//   const response: AxiosResponse = await instance.get(\r\n//     \"/api/orders/myorders/\"\r\n//   );\r\n//   return response.data;\r\n// };\r\n\r\nexport const getUserOrders = (): AppThunk => async (dispatch, getState) => {\r\n  const orders = getState().userOrders.orders;\r\n  if (orders.length > 0) return;\r\n\r\n  dispatch(startLoadingOrder());\r\n  try {\r\n    const response: AxiosResponse = await instance.get(\"/api/orders/myorders/\");\r\n\r\n    dispatch(setOrders(response.data));\r\n    dispatch(setOrderError(null));\r\n    dispatch(finishLoadingOrder());\r\n  } catch (err: any) {\r\n    dispatch(finishLoadingOrder());\r\n    const msgError = getMsgError(err);\r\n    dispatch(setOrderError(msgError));\r\n    Swal.fire(\"Error\", msgError, \"error\");\r\n  }\r\n};\r\n\r\nexport const refreshUserOrders = (): AppThunk => async (dispatch) => {\r\n  dispatch(startLoadingOrder());\r\n  try {\r\n    const response: AxiosResponse = await instance.get(\"/api/orders/myorders/\");\r\n\r\n    dispatch(setOrders(response.data));\r\n    dispatch(setOrderError(null));\r\n    dispatch(finishLoadingOrder());\r\n  } catch (err: any) {\r\n    dispatch(finishLoadingOrder());\r\n    const msgError = getMsgError(err);\r\n    dispatch(setOrderError(msgError));\r\n    Swal.fire(\"Error\", msgError, \"error\");\r\n  }\r\n};\r\n\r\nexport const getTotalCartPrice = (): AppThunk => async (dispatch, getState) => {\r\n  const cartItems = getState().cart.items;\r\n  dispatch(startLoadingOrder());\r\n  try {\r\n    const response: AxiosResponse = await instance.put(\r\n      \"/api/orders/totalPrice/\",\r\n      cartItems\r\n    );\r\n    dispatch(\r\n      setPrices({\r\n        subTotal: response.data.subTotal,\r\n        taxPrice: response.data.taxPrice,\r\n        shippingPrice: response.data.shippingPrice,\r\n        total: response.data.totalPrice,\r\n      })\r\n    );\r\n    dispatch(finishLoadingOrder());\r\n    dispatch(setSuccess(true));\r\n  } catch (err: any) {\r\n    dispatch(finishLoadingOrder());\r\n    dispatch(setSuccess(false));\r\n    const msgError = getMsgError(err);\r\n    dispatch(setError(msgError));\r\n    Swal.fire(\"Error\", msgError, \"error\");\r\n  }\r\n};\r\n\r\nexport const payOrder =\r\n  (orderId: string): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const orders = getState().orders.orders;\r\n\r\n    const localOrder = orders.find(\r\n      (order) => Number(order._id) === Number(orderId)\r\n    );\r\n    if (!localOrder) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        `ORDEN CON ID: ${orderId} NO ENCONTRADO EN MEMORIA`,\r\n        \"error\"\r\n      );\r\n      return;\r\n    }\r\n    dispatch(startLoadingOrder());\r\n    try {\r\n      const response: AxiosResponse = await instance.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        {}\r\n      );\r\n      console.log(\"response from payOrder()\", response);\r\n\r\n      const updatedOrder = {\r\n        ...localOrder,\r\n        isPaid: true,\r\n        paidAt: response.data.paidAt,\r\n      };\r\n\r\n      const updatedOrders = orders.map((order) => {\r\n        if (Number(order._id) === Number(orderId)) {\r\n          return updatedOrder;\r\n        }\r\n\r\n        return order;\r\n      });\r\n\r\n      dispatch(setCurrentOrder(updatedOrder));\r\n      dispatch(setAllOrders(updatedOrders));\r\n      dispatch(finishLoadingOrder());\r\n      dispatch(setSuccess(true));\r\n    } catch (err: any) {\r\n      dispatch(finishLoadingOrder());\r\n      dispatch(setSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      dispatch(setError(msgError));\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { useForm } from \"../app/hooks/useForm\";\r\nimport { Message } from \"../components/Message\";\r\nimport { isChecking, getUser } from \"../features/Auth/authSlice\";\r\nimport { isError, removeError } from \"../features/ui/uiSlice\";\r\nimport { updateUserProfile } from \"../features/Auth/authAPI\";\r\nimport { LoadSpinner } from \"../components/LoadSpinner\";\r\nimport {\r\n  getUserOrders,\r\n  refreshUserOrders,\r\n} from \"../features/MyOrders/MyOrderAPI\";\r\nimport {\r\n  getOrders,\r\n  isLoadingOrder,\r\n  getOrderError,\r\n  setCurrentOrder,\r\n} from \"../features/MyOrders/MyOrdersSlice\";\r\nimport { Loading } from \"../components/loading/loading\";\r\nimport { IOrderInDetails } from \"../schemas\";\r\n\r\nexport const ProfileScreen: FC<RouteComponentProps> = ({ history }) => {\r\n  const [message, setMessage] = useState<string | undefined>(undefined);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const checking = useAppSelector(isChecking);\r\n  const orders = useAppSelector(getOrders);\r\n  const loadingOrders = useAppSelector(isLoadingOrder);\r\n  const error = useAppSelector(isError);\r\n  const orderError = useAppSelector(getOrderError);\r\n  const user = useAppSelector(getUser);\r\n  //   const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  interface formProps {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n  }\r\n\r\n  const [formValues, actions] = useForm<formProps>({\r\n    name: user?.name || \"\",\r\n    email: user?.email || \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const {\r\n    values: { name, email, password, confirmPassword },\r\n  } = formValues;\r\n  const { handleInputChange } = actions;\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      setMessage(\"\");\r\n      dispatch(updateUserProfile(name, email, password));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"EJECUTANDO getUserOrders desde ProfileScreen\");\r\n    dispatch(getUserOrders());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(removeError());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, user]);\r\n\r\n  const setCurrentOrderHandler = (order: IOrderInDetails) => {\r\n    dispatch(setCurrentOrder(order));\r\n  };\r\n  const refreshUserOrdersHandler = () => {\r\n    dispatch(refreshUserOrders());\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"text-center mt-3\">\r\n        <Col>\r\n          <h1>User Profile</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-1\">\r\n        <Col md={3}>\r\n          <h2 className=\" text-center\">User Info</h2>\r\n          {message && <Message variant=\"danger\">{message}</Message>}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter your name\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmpassword\">\r\n              <Form.Label>confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                name=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"mt-2\"\r\n              disabled={checking}\r\n            >\r\n              {checking ? \"loading\" : \"Update\"}\r\n            </Button>\r\n            {checking ? <LoadSpinner /> : undefined}\r\n          </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n          <h2 className=\" text-center\">My Orders</h2>\r\n          {loadingOrders && <Loading />}\r\n          {orderError && <Message variant=\"danger\">{orderError}</Message>}\r\n          {orders.length > 0 ? (\r\n            <Table striped responsive className=\"table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Date</th>\r\n                  <th>Total</th>\r\n                  <th>Paid</th>\r\n                  <th>Delivered</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order) => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>${order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button\r\n                          className=\"btn-sm\"\r\n                          onClick={() => setCurrentOrderHandler(order)}\r\n                        >\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          ) : undefined}\r\n          <Button className=\"btn-sm\" onClick={refreshUserOrdersHandler}>\r\n            Update user Orders\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React, { VFC } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\ninterface Props {\r\n  step1?: boolean;\r\n  step2?: boolean;\r\n  step3?: boolean;\r\n  step4?: boolean;\r\n}\r\n\r\nexport const CheckoutSteps: VFC<Props> = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Login</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Login</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { useForm } from \"../app/hooks/useForm\";\r\nimport {\r\n  getShippingAddress,\r\n  updateShippingAddressLS,\r\n} from \"../features/Cart/cartSlice\";\r\nimport { IShippingAddress } from \"../schemas\";\r\nimport { CheckoutSteps } from \"../features/CheckoutSteps\";\r\n\r\nexport const ShippingScreen: FC<RouteComponentProps> = ({ history }) => {\r\n  const shippingAddress = useAppSelector(getShippingAddress);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [formValues, actions] = useForm<IShippingAddress>({\r\n    address: shippingAddress?.address || \"\",\r\n    city: shippingAddress?.city || \"\",\r\n    postalCode: shippingAddress?.postalCode || \"\",\r\n    country: shippingAddress?.country || \"\",\r\n  });\r\n\r\n  const {\r\n    values: { address, city, postalCode, country },\r\n  } = formValues;\r\n  const { handleInputChange } = actions;\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      updateShippingAddressLS({\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      })\r\n    );\r\n\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          <CheckoutSteps step1={true} step2={true} />\r\n          <h1>Shipping</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"Address\">\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter your address\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"City\">\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter your city\"\r\n                name=\"city\"\r\n                value={city}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"PostalCode\">\r\n              <Form.Control\r\n                required\r\n                type=\"number\"\r\n                placeholder=\"Enter your postal Code\"\r\n                name=\"postalCode\"\r\n                value={postalCode}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"Country\">\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter your country\"\r\n                name=\"country\"\r\n                value={country}\r\n                onChange={handleInputChange}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n              Continue\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { FC, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport {\r\n  getShippingAddress,\r\n  savePaymentMethodLS,\r\n} from \"../features/Cart/cartSlice\";\r\nimport { getTotalCartPrice } from \"../features/MyOrders/MyOrderAPI\";\r\nimport { CheckoutSteps } from \"../features/CheckoutSteps\";\r\n\r\nexport const PaymentScreen: FC<RouteComponentProps> = ({ history }) => {\r\n  const dispatch = useAppDispatch();\r\n  const shippingAddress = useAppSelector(getShippingAddress);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  if (!shippingAddress?.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethodLS(paymentMethod));\r\n    dispatch(getTotalCartPrice());\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          <CheckoutSteps step1={true} step2={true} step3={true} />\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"Address\">\r\n              <Form.Label as=\"legend\">Select Method</Form.Label>\r\n              <Col>\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label=\"PayPal or Credit Card\"\r\n                  id=\"paypal\"\r\n                  name=\"paymentMethod\"\r\n                  checked\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                    setPaymentMethod(e.target.value)\r\n                  }\r\n                ></Form.Check>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\" className=\"mt-4\">\r\n              continue\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { VFC } from \"react\";\r\nimport { Row, Col, Image, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Message } from \"../../components/Message\";\r\nimport { ICartState } from \"../Cart/cartSlice\";\r\n\r\nexport const PlaceOrderInfo: VFC<ICartState> = (cart) => {\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      <ListGroup.Item>\r\n        <h2>Shipping</h2>\r\n        <p>\r\n          <strong>Shipping: </strong>\r\n          {cart.shippingAddress?.address}, {cart.shippingAddress?.city}{\" \"}\r\n          {cart.shippingAddress?.postalCode}, {cart.shippingAddress?.country}\r\n        </p>\r\n      </ListGroup.Item>\r\n      <ListGroup.Item>\r\n        <h2>Payment Method</h2>\r\n        <p>\r\n          <strong>Method: </strong>\r\n          {cart.paymentMethod}\r\n        </p>\r\n      </ListGroup.Item>\r\n      <ListGroup.Item>\r\n        <h2>Order Items</h2>\r\n        {cart.items.length === 0 ? (\r\n          <Message variant=\"info\">Your Cart is empty</Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cart.items.map((item, idx) => (\r\n              <ListGroup.Item key={idx}>\r\n                <Row>\r\n                  <Col md={1}>\r\n                    <Image\r\n                      src={item.product.mainImageUrl}\r\n                      alt={item.product.name}\r\n                      fluid\r\n                      rounded\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Link to={`/product/${item.product._id}`}>\r\n                      {item.product.name}\r\n                    </Link>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    {item.qty} X ${item.product.price} = $\r\n                    {(item.qty * item.product.price).toFixed(2)}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  );\r\n};\r\n","import React, { VFC } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Card, Spinner } from \"react-bootstrap\";\r\nimport { Message } from \"../../components/Message\";\r\nimport { isError, isLoading } from \"../ui/uiSlice\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\n\r\ninterface Props {\r\n  subtotal: number;\r\n  shippingPrice: number;\r\n  taxPrice: number;\r\n  totalPrice: number;\r\n  placeOrderHandler?: () => void;\r\n}\r\n\r\nexport const OrderSummary: VFC<Props> = ({\r\n  subtotal,\r\n  shippingPrice,\r\n  taxPrice,\r\n  totalPrice,\r\n  placeOrderHandler,\r\n}) => {\r\n  const error = useAppSelector(isError);\r\n  const loading = useAppSelector(isLoading);\r\n  return (\r\n    <Card>\r\n      <ListGroup variant=\"flush\">\r\n        <ListGroup.Item>\r\n          <h2>Order Summary</h2>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col>Subtotal:</Col>\r\n            <Col>${subtotal}</Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col>Shipping:</Col>\r\n            <Col>${shippingPrice}</Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col>Tax:</Col>\r\n            <Col>${taxPrice}</Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col>Total:</Col>\r\n            <Col>${totalPrice}</Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        <ListGroup.Item></ListGroup.Item>\r\n        {placeOrderHandler ? (\r\n          <ListGroup.Item>\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-block\"\r\n              variant=\"primary\"\r\n              onClick={placeOrderHandler}\r\n              disabled={loading || error ? true : false}\r\n            >\r\n              {loading\r\n                ? (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                      animation=\"border\"\r\n                    />\r\n                  ) + \"Loading ...\"\r\n                : \"Place Order\"}\r\n            </Button>\r\n          </ListGroup.Item>\r\n        ) : undefined}\r\n      </ListGroup>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { getCart } from \"../features/Cart/cartSlice\";\r\nimport { CheckoutSteps } from \"../features/CheckoutSteps\";\r\nimport {\r\n  getCurrentOrder,\r\n  getSuccess,\r\n  setSuccess,\r\n  getOrderState,\r\n  isLoadingOrder,\r\n} from \"../features/MyOrders/MyOrdersSlice\";\r\nimport {\r\n  createOrder,\r\n  getTotalCartPrice,\r\n} from \"../features/MyOrders/MyOrderAPI\";\r\nimport { removeError } from \"../features/ui/uiSlice\";\r\nimport { PlaceOrderInfo } from \"../features/MyOrders/PlaceOrderInfo\";\r\nimport { OrderSummary } from \"../features/MyOrders/OrderSummary\";\r\nimport { isError, isLoading } from \"../features/ui/uiSlice\";\r\nimport { Loading } from \"../components/loading/loading\";\r\nimport { Message } from \"../components/Message\";\r\n\r\nexport const PlaceOrderScreen: FC<RouteComponentProps> = ({ history }) => {\r\n  const cart = useAppSelector(getCart);\r\n  const dispatch = useAppDispatch();\r\n  const order = useAppSelector(getCurrentOrder);\r\n  const success = useAppSelector(getSuccess);\r\n  const orderState = useAppSelector(getOrderState);\r\n  const error = useAppSelector(isError);\r\n  const uiLoading = useAppSelector(isLoading);\r\n  const loadingOrder = useAppSelector(isLoadingOrder);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.items,\r\n        subTotal: orderState.subtotal,\r\n        shippingAddress: cart.shippingAddress,\r\n        taxPrice: orderState.taxPrice,\r\n        shippingPrice: orderState.shippingPrice,\r\n        totalPrice: orderState.total,\r\n        paymentMethod: cart.paymentMethod,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loadingOrder && orderState.subtotal === 0 && !uiLoading && !error) {\r\n      dispatch(getTotalCartPrice());\r\n    }\r\n  }, [loadingOrder, orderState.subtotal, dispatch, uiLoading, error]);\r\n\r\n  useEffect(() => {\r\n    if (success && order?._id) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [history, success, order?._id]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(removeError());\r\n      dispatch(setSuccess(false));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1={true} step2={true} step3={true} step4={true} />\r\n      <Row>\r\n        <Col md={8}>\r\n          <PlaceOrderInfo {...cart} />\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {loadingOrder ? (\r\n            <Loading />\r\n          ) : (\r\n            <OrderSummary\r\n              subtotal={orderState.subtotal}\r\n              shippingPrice={orderState.shippingPrice}\r\n              taxPrice={orderState.taxPrice}\r\n              totalPrice={orderState.total}\r\n              placeOrderHandler={placeOrderHandler}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React, { VFC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Image, ListGroup, Button } from \"react-bootstrap\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\n\r\nimport { IOrderInDetails } from \"../../schemas\";\r\nimport { Message } from \"../../components/Message\";\r\nimport { payOrder } from \"./MyOrderAPI\";\r\n\r\nexport const OrderDetails: VFC<IOrderInDetails> = (order) => {\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      <ListGroup.Item>\r\n        <h2>Order {order._id}</h2>\r\n        <p>\r\n          <strong>Shipping: </strong> <strong>Name:</strong> {order.user.name}{\" \"}\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          <strong>Email:</strong>{\" \"}\r\n          <a href={`mailto:${order.user.email}`}>{order.user.email}</a>{\" \"}\r\n        </p>\r\n        <p>\r\n          {order.shippingAddress?.address} {order.shippingAddress?.city}{\" \"}\r\n          {order.shippingAddress?.postalCode}, {order.shippingAddress?.country}\r\n        </p>\r\n\r\n        {order.isDelivered ? (\r\n          <Message variant=\"success\">Delivered on {order.deleveredAt}</Message>\r\n        ) : (\r\n          <Message variant=\"warning\">Not delivered</Message>\r\n        )}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item>\r\n        <h2>Payment Method</h2>\r\n        <p>\r\n          <strong>Method: </strong>\r\n          {order.paymentMethod}\r\n        </p>\r\n        {order.isPaid ? (\r\n          <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n        ) : (\r\n          <>\r\n            <Message variant=\"warning\">Not paid</Message>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"primary\"\r\n              onClick={() => dispatch(payOrder(order._id))}\r\n            >\r\n              Pay Order\r\n            </Button>\r\n          </>\r\n        )}\r\n      </ListGroup.Item>\r\n      <ListGroup.Item>\r\n        <ListGroup variant=\"flush\">\r\n          {order.orderItems.map((item, idx) => (\r\n            <ListGroup.Item key={item._id}>\r\n              <Row>\r\n                <Col md={1}>\r\n                  <Image src={item.image} alt={item.name} fluid rounded />\r\n                </Col>\r\n                <Col>\r\n                  <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                </Col>\r\n                <Col md={4}>\r\n                  {item.qty} X ${item.price} = $\r\n                  {(item.qty * item.price).toFixed(2)}\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  );\r\n};\r\n","import { AxiosResponse } from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { instance } from \"../../app/axiosInstance\";\r\nimport { AppThunk } from \"../../app/store\";\r\n\r\nimport { setLoading, setOrders } from \"./OrdersSlice\";\r\nimport { getMsgError } from \"../../app/helpers\";\r\nimport { IOrderInDetails } from \"../../schemas\";\r\nimport { setCurrentOrder } from \"../MyOrders/MyOrdersSlice\";\r\n\r\nexport const fetchAllOrders = (): AppThunk => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const response: AxiosResponse = await instance.get(\"/api/orders/\");\r\n    const orders: IOrderInDetails[] = response.data;\r\n\r\n    dispatch(setOrders(orders));\r\n    dispatch(setLoading(false));\r\n  } catch (err: any) {\r\n    dispatch(setLoading(false));\r\n    const msgError = getMsgError(err);\r\n    Swal.fire(\"Error\", msgError, \"error\");\r\n  }\r\n};\r\n\r\nexport const getAllOrders = (): AppThunk => async (dispatch, getState) => {\r\n  const orders = getState().orders.orders;\r\n  if (orders.length > 0) return;\r\n  dispatch(fetchAllOrders());\r\n};\r\n\r\nexport const deliverOrder =\r\n  (orderId: string): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const orders = getState().orders.orders;\r\n\r\n    const localOrder = orders.find(\r\n      (order) => Number(order._id) === Number(orderId)\r\n    );\r\n\r\n    if (!localOrder) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        `ORDEN CON ID: ${orderId} NO ENCONTRADO EN MEMORIA`,\r\n        \"error\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    dispatch(setLoading(true));\r\n    try {\r\n      const response: AxiosResponse = await instance.put(\r\n        `/api/orders/${orderId}/deliver/`,\r\n        {}\r\n      );\r\n\r\n      const updatedOrder = {\r\n        ...localOrder,\r\n        isDelivered: true,\r\n        deleveredAt: response.data.deliveredAt,\r\n      };\r\n\r\n      const updatedOrders = orders.map((order) => {\r\n        if (Number(order._id) === Number(orderId)) {\r\n          return updatedOrder;\r\n        }\r\n\r\n        return order;\r\n      });\r\n      dispatch(setCurrentOrder(updatedOrder));\r\n      dispatch(setOrders(updatedOrders));\r\n      dispatch(setLoading(false));\r\n    } catch (err: any) {\r\n      dispatch(setLoading(false));\r\n      const msgError = getMsgError(err);\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\r\nimport {\r\n  getCurrentOrder,\r\n  getOrderById,\r\n  removeCurrentOrder,\r\n} from \"../../features/MyOrders/MyOrdersSlice\";\r\nimport { Message } from \"../../components/Message\";\r\nimport { Loading } from \"../../components/loading/loading\";\r\nimport { isError, isLoading, removeError } from \"../../features/ui/uiSlice\";\r\nimport { OrderSummary } from \"../../features/MyOrders/OrderSummary\";\r\nimport { OrderDetails } from \"../../features/MyOrders/OrderDetails\";\r\nimport { deliverOrder } from \"../../features/Orders/OrdersAPI\";\r\nimport { getAuthState } from \"../../features/Auth/authSlice\";\r\n\r\ninterface MatchParams {\r\n  id: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<MatchParams> {}\r\n\r\nexport const OrderScreen: FC<Props> = ({ match, history }) => {\r\n  const id = match.params.id;\r\n  const dispatch = useAppDispatch();\r\n  const order = useAppSelector(getCurrentOrder);\r\n  const error = useAppSelector(isError);\r\n  const loading = useAppSelector(isLoading);\r\n  const auth = useAppSelector(getAuthState);\r\n\r\n  const { user } = auth;\r\n\r\n  if (!order && !loading) {\r\n    dispatch(getOrderById(id));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.push(\"/login\");\r\n    }\r\n    return () => {\r\n      dispatch(removeError());\r\n      dispatch(removeCurrentOrder());\r\n    };\r\n  }, [dispatch, history, user]);\r\n\r\n  const orderDeliverHandler = () => {\r\n    if (order) {\r\n      dispatch(deliverOrder(order._id));\r\n    }\r\n  };\r\n\r\n  console.log(\"order: \", order);\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col md={8}>\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {loading && <Loading />}\r\n          {order && <OrderDetails {...order} />}\r\n        </Col>\r\n        <Col md={4} className=\"mt-4\">\r\n          {order?.subTotal ? (\r\n            <OrderSummary\r\n              subtotal={order.subTotal}\r\n              shippingPrice={order.shippingPrice}\r\n              taxPrice={order.taxPrice}\r\n              totalPrice={order.totalPrice}\r\n            />\r\n          ) : undefined}\r\n          {user?.isAdmin && order?.isPaid ? (\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"success\"\r\n              className=\"mt-3 btn btn-block\"\r\n              onClick={orderDeliverHandler}\r\n              disabled={order && order.isDelivered ? true : false}\r\n            >\r\n              {order && order.isDelivered ? \"Delivered\" : \"Mark as delivered\"}\r\n            </Button>\r\n          ) : undefined}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, FC } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { Loading } from \"../components/loading/loading\";\r\nimport { Message } from \"../components/Message\";\r\nimport { getUsersState } from \"../features/Users/UsersSlice\";\r\nimport { fetchAllUsers, userDelete } from \"../features/Users/UsersAPI\";\r\nimport { setSelectedUserById } from \"../features/Users/UsersSlice\";\r\n\r\nexport const UserListScreen: FC<RouteComponentProps> = ({ history }) => {\r\n  const dispatch = useAppDispatch();\r\n  const usersState = useAppSelector(getUsersState);\r\n\r\n  const { loading, error, users } = usersState;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllUsers());\r\n  }, [dispatch]);\r\n\r\n  const deleteUserHandler = (id: string) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n      dispatch(userDelete(id));\r\n    }\r\n  };\r\n\r\n  const updateSelectedUser = (userId: string) => {\r\n    dispatch(setSelectedUserById(userId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      {loading && <Loading />}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {users.length > 0 ? (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button\r\n                      variant=\"light\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => updateSelectedUser(user._id)}\r\n                    >\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteUserHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : undefined}\r\n    </div>\r\n  );\r\n};\r\n","import { AxiosResponse } from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { AppThunk } from \"../../app/store\";\r\n\r\nimport { instance } from \"../../app/axiosInstance\";\r\nimport {\r\n  startLoadingUsers,\r\n  finishLoadingUsers,\r\n  setUsersError,\r\n  setUsers,\r\n  setSuccess,\r\n  setSelectedUser,\r\n} from \"./UsersSlice\";\r\nimport { getMsgError } from \"../../app/helpers\";\r\nimport { IUserBase } from \"../../schemas\";\r\n\r\nexport const fetchAllUsers = (): AppThunk => async (dispatch, getState) => {\r\n  const users = getState().users.users;\r\n\r\n  if (users.length !== 0) return;\r\n\r\n  dispatch(startLoadingUsers());\r\n  try {\r\n    const res: AxiosResponse = await instance.get(\"/api/users\");\r\n\r\n    dispatch(setUsers(res.data));\r\n    dispatch(finishLoadingUsers());\r\n  } catch (err: any) {\r\n    dispatch(finishLoadingUsers());\r\n    const msgError = getMsgError(err);\r\n    dispatch(setUsersError(msgError));\r\n    Swal.fire(\"Error\", msgError, \"error\");\r\n  }\r\n};\r\n\r\nexport const userDelete =\r\n  (id: string): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const users = getState().users.users;\r\n\r\n    const userLocal = users.find((u) => u._id === id);\r\n    if (!userLocal) {\r\n      console.log(`USUARIO CON ID: ${id} NO ENCONTRADO EN MEMORIA`);\r\n      return;\r\n    }\r\n\r\n    const updatedUsers = users.filter((u) => u._id !== userLocal._id);\r\n\r\n    dispatch(startLoadingUsers());\r\n    try {\r\n      const res: AxiosResponse = await instance.delete(\r\n        `/api/users/delete/${id}/`\r\n      );\r\n\r\n      console.log(res.data);\r\n      dispatch(setUsers(updatedUsers));\r\n\r\n      dispatch(finishLoadingUsers());\r\n      dispatch(setSuccess(true));\r\n    } catch (err: any) {\r\n      dispatch(finishLoadingUsers());\r\n      dispatch(setSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      dispatch(setUsersError(msgError));\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n\r\nexport const userUpdate =\r\n  (user: IUserBase): AppThunk =>\r\n  async (dispatch, getState) => {\r\n    const users = getState().users.users;\r\n\r\n    const userLocal = users.find((u) => Number(u._id) === Number(user._id));\r\n    if (!userLocal) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        `USUARIO CON ID: ${user._id} NO ENCONTRADO EN MEMORIA`,\r\n        \"error\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    dispatch(startLoadingUsers());\r\n    try {\r\n      const res: AxiosResponse = await instance.put(\r\n        `/api/users/update/${user._id}/`,\r\n        user\r\n      );\r\n\r\n      const updatedUsers = users.map((usr) => {\r\n        if (Number(usr._id) === Number(user._id)) {\r\n          return user;\r\n        }\r\n        return usr;\r\n      });\r\n\r\n      dispatch(setUsers(updatedUsers));\r\n      dispatch(setSelectedUser(user));\r\n      dispatch(finishLoadingUsers());\r\n      dispatch(setSuccess(true));\r\n    } catch (err: any) {\r\n      dispatch(finishLoadingUsers());\r\n      dispatch(setSuccess(false));\r\n      const msgError = getMsgError(err);\r\n      dispatch(setUsersError(msgError));\r\n      Swal.fire(\"Error\", msgError, \"error\");\r\n    }\r\n  };\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { useForm } from \"../app/hooks/useForm\";\r\n\r\nimport { Message } from \"../components/Message\";\r\n\r\nimport {\r\n  setSelectedUserById,\r\n  getSelectedUser,\r\n  removeSelectedUser,\r\n  isLoadingUsers,\r\n  getErrorUsers,\r\n  getUsersSuccess,\r\n  removeUsersError,\r\n} from \"../features/Users/UsersSlice\";\r\n\r\nimport { userUpdate } from \"../features/Users/UsersAPI\";\r\n\r\nimport { LoadSpinner } from \"../components/LoadSpinner\";\r\nimport { IUserBase } from \"../schemas\";\r\n\r\ninterface MatchParams {\r\n  id: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<MatchParams> {}\r\n\r\nconst EditUserScreen: FC<Props> = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const dispatch = useAppDispatch();\r\n  const loading = useAppSelector(isLoadingUsers);\r\n  const error = useAppSelector(getErrorUsers);\r\n  const user = useAppSelector(getSelectedUser);\r\n  const success = useAppSelector(getUsersSuccess);\r\n\r\n  const [isAdmin, setIsAdmin] = useState<boolean>(user?.isAdmin || false);\r\n\r\n  interface formProps {\r\n    name: string;\r\n    email: string;\r\n  }\r\n\r\n  const [formValues, actions] = useForm<formProps>({\r\n    name: user?.name || \"\",\r\n    email: user?.email || \"\",\r\n  });\r\n\r\n  const {\r\n    values: { name, email },\r\n  } = formValues;\r\n\r\n  const { handleInputChange } = actions;\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const updatedUser: IUserBase = {\r\n      _id: userId,\r\n      name,\r\n      email,\r\n      isAdmin,\r\n    };\r\n\r\n    dispatch(userUpdate(updatedUser));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user?.name || user?._id !== userId) {\r\n      dispatch(setSelectedUserById(userId));\r\n    }\r\n  }, [user, userId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!error && !loading && success) {\r\n      history.push(\"/admin/users\");\r\n    }\r\n  }, [error, loading, history, success]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(removeUsersError());\r\n      dispatch(removeSelectedUser());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <Link to=\"/admin/users\">Go Back</Link>\r\n      <h1>Edit User</h1>\r\n      {loading ? (\r\n        <LoadSpinner />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter your name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleInputChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"isadmin\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Is Admin\"\r\n              checked={isAdmin}\r\n              onChange={(e) => setIsAdmin(e.target.checked)}\r\n            ></Form.Check>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            className=\"mt-2\"\r\n            disabled={loading}\r\n          >\r\n            Update\r\n          </Button>\r\n          {loading ? <LoadSpinner /> : undefined}\r\n        </Form>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditUserScreen;\r\n","import React, { useEffect, FC } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { Loading } from \"../components/loading/loading\";\r\nimport { Message } from \"../components/Message\";\r\nimport { getAuthState } from \"../features/Auth/authSlice\";\r\n\r\nimport {\r\n  getProductsState,\r\n  setSelectedProductById,\r\n} from \"../features/products/productSlice\";\r\n\r\nimport {\r\n  deleteProduct,\r\n  getProductsPerPage,\r\n} from \"../features/products/productAPI\";\r\nimport Paginate from \"../components/Paginate\";\r\n\r\nconst ProductListScreen: FC<RouteComponentProps> = ({ history }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const productsState = useAppSelector(getProductsState);\r\n  const authState = useAppSelector(getAuthState);\r\n\r\n  const {\r\n    currentProductsPerPage,\r\n    loading,\r\n    hasErrors: error,\r\n    pagination,\r\n  } = productsState;\r\n\r\n  const { isLoggedIn } = authState;\r\n  const products = currentProductsPerPage\r\n    ? currentProductsPerPage.products\r\n    : [];\r\n\r\n  useEffect(() => {\r\n    if (products.length < 1 && !loading && !error && isLoggedIn) {\r\n      dispatch(getProductsPerPage(pagination.page));\r\n    }\r\n  }, [dispatch, products, loading, error, isLoggedIn, pagination.page]);\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [isLoggedIn, history]);\r\n\r\n  const deleteProductHandler = (id: string) => {\r\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const productToEditHandler = (productId: string) => {\r\n    dispatch(setSelectedProductById(productId));\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    // create product\r\n    history.push(\"/admin/product/create\");\r\n  };\r\n\r\n  const handlePaginationClick = (page: number) => {\r\n    dispatch(getProductsPerPage(page));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loading && <Loading />}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {!isLoggedIn && (\r\n        <h3>\r\n          Inicia sesion <LinkContainer to={\"/login\"}>aquí</LinkContainer> para\r\n          ver la lista de productos\r\n        </h3>\r\n      )}\r\n      {isLoggedIn && products.length > 0 ? (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>$ {product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button\r\n                        variant=\"light\"\r\n                        className=\"btn-sm\"\r\n                        onClick={() => productToEditHandler(product._id)}\r\n                      >\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteProductHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate\r\n            page={pagination.page}\r\n            pages={pagination.pages}\r\n            search={false}\r\n            handleClick={handlePaginationClick}\r\n          />\r\n        </>\r\n      ) : (\r\n        <h3>Aun no has creado ningun producto</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\n//import {resizeFile} from '../app/helpers';\r\n\r\ninterface Props {\r\n  fileList: FileList | undefined;\r\n  setFileList: React.Dispatch<React.SetStateAction<FileList | undefined>>;\r\n}\r\n\r\nconst UploadImages: React.VFC<Props> = ({ fileList, setFileList }) => {\r\n  // const [fileList, setFileList] = useState<FileList | null>(null);\r\n  const [imageURLs, setImageURLs] = useState<string[]>([]);\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const fileToBlob = async (file: File) =>\r\n    new Blob([new Uint8Array(await file.arrayBuffer())], { type: file.type });\r\n\r\n  const updateImageUrlsCB2 = useCallback(async () => {\r\n    const updatedImgUrls: string[] = [];\r\n\r\n    if (fileList) {\r\n      for (let i = 0; i < fileList.length; i++) {\r\n        const fileImage = fileList.item(i);\r\n        if (fileImage) {\r\n          //const resizedImg = await resizeFile(fileImage);\r\n          const blobImage = await fileToBlob(fileImage);\r\n          updatedImgUrls.push(URL.createObjectURL(blobImage));\r\n        }\r\n      }\r\n    }\r\n    setImageURLs(updatedImgUrls);\r\n  }, [fileList]);\r\n\r\n  useEffect(() => {\r\n    if (fileList && fileList.length < 1) return;\r\n    updateImageUrlsCB2();\r\n  }, [fileList, updateImageUrlsCB2]);\r\n\r\n  const onImageChange = async (e: FileList | null) => {\r\n    if (e) {\r\n      const fileArray = [];\r\n      for (let i = 0; i < e.length; i++) {\r\n        const imgFile = e.item(i);\r\n        if (imgFile) {\r\n          fileArray.push(await fileToBlob(imgFile));\r\n        }\r\n      }\r\n\r\n      setFileList(e);\r\n    }\r\n  };\r\n\r\n  const deleteFile = (url: string, idx: number) => {\r\n    const updatedImageUrls = imageURLs.filter((i) => i !== url);\r\n    setImageURLs(updatedImageUrls);\r\n\r\n    if (fileList) {\r\n      const dt = new DataTransfer();\r\n\r\n      for (let i = 0; i < fileList?.length; i++) {\r\n        const file = fileList[i];\r\n        if (idx !== i) {\r\n          dt.items.add(file);\r\n        }\r\n      }\r\n\r\n      inputRef!.current!.files = dt.files;\r\n      setFileList(dt.files);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"file\"\r\n        multiple\r\n        accept=\"image/*\"\r\n        ref={inputRef}\r\n        onChange={(e) => onImageChange(e.target.files)}\r\n      />\r\n      <Row>\r\n        {imageURLs.map((imgSrc, idx) => (\r\n          <Col xs={12} md={3} key={imgSrc}>\r\n            <img src={imgSrc} width=\"200px\" alt={`to upload ${idx}`} />\r\n            <Button variant=\"danger\" onClick={() => deleteFile(imgSrc, idx)}>\r\n              Eliminar\r\n            </Button>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Card, Row, Col } from \"react-bootstrap\";\r\nimport { useForm } from \"../../app/hooks/useForm\";\r\nimport ImageUpload from \"../../components/ImageUpload\";\r\nimport { IProduct, ICreateProduct, IImage } from \"../../schemas\";\r\nimport { setMainProductImage } from \"../../app/helpers\";\r\nimport { updateProducts } from \"../products/productSlice\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\n\r\ninterface formProps {\r\n  name: string;\r\n  price: number;\r\n  brand: string;\r\n  category: string;\r\n  countInStock: number;\r\n  description: string;\r\n}\r\n\r\ninterface Props {\r\n  product: IProduct | null;\r\n  eventHandler: (\r\n    product: IProduct | ICreateProduct,\r\n    images?: FileList,\r\n    imagesToDelete?: IImage[]\r\n  ) => void;\r\n}\r\n\r\nconst ProductForm: React.VFC<Props> = ({ product, eventHandler }) => {\r\n  const dispatch = useAppDispatch();\r\n  const edit = product ? true : false;\r\n  const [filesToUpload, setFilesToUpload] = useState<FileList | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const [imageToDelete, setImageToDelete] = useState<IImage[]>([]);\r\n  const [productImages, setProductImages] = useState<IImage[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (product && product.images) {\r\n      setProductImages(product.images);\r\n    }\r\n  }, [product]);\r\n\r\n  const [formValues, actions] = useForm<formProps>({\r\n    name: product?.name || \"\",\r\n    price: product?.price || 0,\r\n    brand: product?.brand || \"\",\r\n    category: product?.category || \"\",\r\n    countInStock: product?.countInStock || 0,\r\n    description: product?.description || \"\",\r\n  });\r\n\r\n  const {\r\n    values: { name, price, brand, category, countInStock, description },\r\n  } = formValues;\r\n\r\n  const { handleInputChange } = actions;\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // create  product\r\n    if (!product) {\r\n      const newProduct: ICreateProduct = {\r\n        name,\r\n        price,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description,\r\n        image: \"testImage\",\r\n      };\r\n      eventHandler(newProduct, filesToUpload);\r\n    } else {\r\n      const updatedProduct: IProduct = {\r\n        _id: product._id,\r\n        name,\r\n        price,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description,\r\n        rating: product.rating,\r\n        numReviews: product.numReviews,\r\n        mainImage: product.mainImage,\r\n        mainImageUrl: product.mainImageUrl,\r\n        images: product.images,\r\n      };\r\n      eventHandler(updatedProduct, filesToUpload, imageToDelete);\r\n    }\r\n  };\r\n\r\n  const onImageDeleteHandler = (image: IImage) => {\r\n    const updatedImagesToDelete = imageToDelete;\r\n    updatedImagesToDelete.push(image);\r\n    setImageToDelete(updatedImagesToDelete);\r\n\r\n    if (product && product.images) {\r\n      const updatedProductImages = productImages.filter(\r\n        (img) => Number(img._id) !== Number(image._id)\r\n      );\r\n      setProductImages(updatedProductImages);\r\n    }\r\n  };\r\n\r\n  const onSetMainImage = async (image: IImage) => {\r\n    const productId = product?._id ? product._id : \"-1\";\r\n\r\n    await setMainProductImage(image._id, productId);\r\n    const updatedProdImgs = productImages.map((img) => {\r\n      if (img.url === image.url) {\r\n        return {\r\n          _id: image._id,\r\n          publicId: image.publicId,\r\n          url: image.url,\r\n          isMain: true,\r\n        };\r\n      }\r\n      return {\r\n        _id: img._id,\r\n        publicId: img.publicId,\r\n        url: img.url,\r\n        isMain: false,\r\n      };\r\n    });\r\n\r\n    setProductImages(updatedProdImgs);\r\n    dispatch(updateProducts(productId, updatedProdImgs));\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <Form.Group controlId=\"name\" className=\"my-3\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter product name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"price\" className=\"my-3\">\r\n        <Form.Label>Price</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Enter Price\"\r\n          name=\"price\"\r\n          value={price}\r\n          onChange={handleInputChange}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      {edit ? (\r\n        productImages.length > 0 ? (\r\n          <Row className=\"my-4\">\r\n            <Col xs={12}>\r\n              <Form.Label>Product Images</Form.Label>\r\n            </Col>\r\n            {productImages.map((image) => {\r\n              return (\r\n                <Col md={3} key={image.url}>\r\n                  <Card>\r\n                    <Card.Img variant=\"top\" src={image.url} />\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      disabled={image.isMain ? true : false}\r\n                      onClick={() => onImageDeleteHandler(image)}\r\n                    >\r\n                      delete\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => onSetMainImage(image)}\r\n                      disabled={image.isMain ? true : false}\r\n                    >\r\n                      Set as Main Image\r\n                    </Button>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        ) : null\r\n      ) : null}\r\n      <Form.Group controlId=\"image\" className=\"my-3\">\r\n        <Form.Label>Upload Images</Form.Label> <br />\r\n        <ImageUpload fileList={filesToUpload} setFileList={setFilesToUpload} />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"brand\" className=\"my-3\">\r\n        <Form.Label>Brand</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter Brand\"\r\n          name=\"brand\"\r\n          value={brand}\r\n          onChange={handleInputChange}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"category\" className=\"my-3\">\r\n        <Form.Label>Category</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter Category\"\r\n          name=\"category\"\r\n          value={category}\r\n          onChange={handleInputChange}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"countInStock\" className=\"my-3\">\r\n        <Form.Label>Stock</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Enter countInStock\"\r\n          name=\"countInStock\"\r\n          value={countInStock}\r\n          onChange={handleInputChange}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"description\" className=\"my-3\">\r\n        <Form.Label>Description</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter countInStock\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={handleInputChange}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Button type=\"submit\" variant=\"primary\" className=\"mt-2\">\r\n        {product?.name ? \"Update\" : \"Create\"}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","import { FC, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { LoadSpinner } from \"../components/LoadSpinner\";\r\nimport ProductForm from \"../features/products/ProductForm\";\r\nimport { Message } from \"../components/Message\";\r\nimport {\r\n  getProductsState,\r\n  setSelectedProductById,\r\n  setReqSuccess,\r\n} from \"../features/products/productSlice\";\r\nimport { updateProduct } from \"../features/products/productAPI\";\r\nimport { IProduct, ICreateProduct, IImage } from \"../schemas\";\r\n\r\ninterface MatchParams {\r\n  id: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<MatchParams> {}\r\n\r\nconst ProductEditScreen: FC<Props> = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    loading,\r\n    hasErrors: error,\r\n    selectedProduct,\r\n    reqSuccess,\r\n  } = useAppSelector(getProductsState);\r\n\r\n  useEffect(() => {\r\n    if (!loading && !error && !selectedProduct) {\r\n      dispatch(setSelectedProductById(productId));\r\n    }\r\n  }, [loading, error, selectedProduct, dispatch, productId]);\r\n\r\n  useEffect(() => {\r\n    if (reqSuccess) {\r\n      history.push(\"/admin/productList\");\r\n    }\r\n    return () => {\r\n      dispatch(setReqSuccess(false));\r\n    };\r\n  }, [reqSuccess, history, dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   return () => {dispatch(setReqSuccess(false))};\r\n  // }, []);\r\n\r\n  const submitHandler = (\r\n    product: IProduct | ICreateProduct,\r\n    images?: FileList,\r\n    imagesToDelete?: IImage[]\r\n  ) => {\r\n    dispatch(updateProduct(product as IProduct, images, imagesToDelete));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Link to=\"/admin/productList\">Go Back</Link>\r\n      <h1>Edit Product</h1>\r\n      {loading ? (\r\n        <LoadSpinner />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <ProductForm product={selectedProduct} eventHandler={submitHandler} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\n// import { useForm } from \"../app/hooks/useForm\";\r\nimport ProductForm from \"../features/products/ProductForm\";\r\nimport { createProduct } from \"../features/products/productAPI\";\r\nimport {\r\n  getProductsState,\r\n  setReqSuccess,\r\n} from \"../features/products/productSlice\";\r\nimport { LoadSpinner } from \"../components/LoadSpinner\";\r\nimport { IProduct, ICreateProduct } from \"../schemas\";\r\n\r\nconst ProductCreateScreen: FC<RouteComponentProps> = ({ history }) => {\r\n  const dispatch = useAppDispatch();\r\n  const { reqSuccess, loading } = useAppSelector(getProductsState);\r\n\r\n  const submitHandler = (\r\n    product: IProduct | ICreateProduct,\r\n    imagesToLoad?: FileList\r\n  ) => {\r\n    dispatch(createProduct(product as ICreateProduct, imagesToLoad));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (reqSuccess) {\r\n      history.push(\"/admin/productList\");\r\n    }\r\n\r\n    return () => {\r\n      dispatch(setReqSuccess(false));\r\n    };\r\n  }, [reqSuccess, history, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <Link to=\"/admin/productList\">Go Back</Link>\r\n      <h1>Create Product</h1>\r\n      {loading && <LoadSpinner />}\r\n      <ProductForm product={null} eventHandler={submitHandler} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductCreateScreen;\r\n","import React from \"react\";\r\n// import { Redirect, Route } from 'react-router-dom';\r\nimport { Redirect, Route, RouteProps } from \"react-router\";\r\n\r\nexport type ProtectedRouteProps = {\r\n  isAuthenticated: boolean;\r\n  authenticationPath: string;\r\n} & RouteProps;\r\n\r\nexport default function ProtectedRoute({\r\n  isAuthenticated,\r\n  authenticationPath,\r\n  ...routeProps\r\n}: ProtectedRouteProps) {\r\n  if (isAuthenticated) {\r\n    return <Route {...routeProps} />;\r\n  } else {\r\n    return <Redirect to={{ pathname: authenticationPath }} />;\r\n  }\r\n}\r\n","import React, { useEffect, FC } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { Loading } from \"../../components/loading/loading\";\r\nimport { getOrdersState } from \"../../features/Orders/OrdersSlice\";\r\nimport { fetchAllOrders, getAllOrders } from \"../../features/Orders/OrdersAPI\";\r\nimport { setCurrentOrder } from \"../../features/MyOrders/MyOrdersSlice\";\r\n\r\nexport const OrderListScreen: FC<RouteComponentProps> = ({ history }) => {\r\n  const dispatch = useAppDispatch();\r\n  const ordersState = useAppSelector(getOrdersState);\r\n\r\n  const { isLoading, orders } = ordersState;\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrders());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Orders</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={() => dispatch(fetchAllOrders())}>\r\n            <i className=\"fas fa-plus\"></i> Refresh Orders\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {isLoading && <Loading />}\r\n      {orders.length > 0 ? (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user.name}</td>\r\n                <td>{order.createdAt && order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    <span>{order.paidAt.substring(0, 10)}</span>\r\n                  ) : (\r\n                    <i className=\"fas fa-ban\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    <span>\r\n                      {order.deleveredAt && order.deleveredAt.substring(0, 10)}\r\n                    </span>\r\n                  ) : (\r\n                    <i className=\"fas fa-ban\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button\r\n                      variant=\"light\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => dispatch(setCurrentOrder(order))}\r\n                    >\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : undefined}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Footer } from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\nimport { HomeScreen } from \"../screens/HomeScreen\";\r\nimport { ProductScreen } from \"../screens/ProductScreen\";\r\n\r\nimport { CartScreen } from \"../screens/CartScreen\";\r\nimport { LoginScreen } from \"../screens/LoginScreen\";\r\nimport { RegisterScreen } from \"../screens/RegisterScreen\";\r\nimport { ProfileScreen } from \"../screens/ProfileScreen\";\r\nimport { ShippingScreen } from \"../screens/ShippingScreen\";\r\nimport { PaymentScreen } from \"../screens/PaymentScreen\";\r\nimport { PlaceOrderScreen } from \"../screens/PlaceOrderScreen\";\r\nimport { OrderScreen } from \"../screens/Order/OrderScreen\";\r\nimport { UserListScreen } from \"../screens/UserListScreen\";\r\nimport EditUserScreen from \"../screens/UserEditScreen\";\r\nimport ProductListScreen from \"../screens/ProductListCreen\";\r\nimport ProductEditScreen from \"../screens/ProductEditScreen\";\r\nimport ProductCreateScreen from \"../screens/ProductCreateScreen\";\r\nimport ProtectedRoute, { ProtectedRouteProps } from \"./PrivateRoute\";\r\nimport { useAppSelector } from \"../app/hooks\";\r\nimport { isAuthenticated } from \"../features/Auth/authSlice\";\r\nimport { OrderListScreen } from \"../screens/Order/OrderListScreen\";\r\n\r\nexport const AppRouter = () => {\r\n  const isLoggedIn = useAppSelector(isAuthenticated);\r\n\r\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\r\n    isAuthenticated: isLoggedIn,\r\n    authenticationPath: \"/login\",\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Header />\r\n        <main>\r\n          <Container>\r\n            <Switch>\r\n              <Route path=\"/\" component={HomeScreen} exact />\r\n              <Route path=\"/login\" component={LoginScreen} />\r\n              <Route path=\"/register\" component={RegisterScreen} />\r\n              <Route path=\"/profile\" component={ProfileScreen} />\r\n              <Route path=\"/shipping\" component={ShippingScreen} />\r\n              <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n              <Route path=\"/payment\" component={PaymentScreen} />\r\n              <ProtectedRoute\r\n                {...defaultProtectedRouteProps}\r\n                path=\"/admin/users\"\r\n                component={UserListScreen}\r\n              />\r\n              <ProtectedRoute\r\n                {...defaultProtectedRouteProps}\r\n                path=\"/admin/user/:id/edit\"\r\n                component={EditUserScreen}\r\n              />\r\n              <ProtectedRoute\r\n                {...defaultProtectedRouteProps}\r\n                path=\"/admin/productList\"\r\n                component={ProductListScreen}\r\n              />\r\n              <ProtectedRoute\r\n                {...defaultProtectedRouteProps}\r\n                path=\"/admin/orders\"\r\n                component={OrderListScreen}\r\n              />\r\n              <ProtectedRoute\r\n                {...defaultProtectedRouteProps}\r\n                path=\"/admin/product/create\"\r\n                component={ProductCreateScreen}\r\n              />\r\n              <ProtectedRoute\r\n                {...defaultProtectedRouteProps}\r\n                path=\"/admin/product/:id/edit\"\r\n                component={ProductEditScreen}\r\n              />\r\n              <Route path=\"/product/:id\" component={ProductScreen} />\r\n              <Route path=\"/cart/:id?\" component={CartScreen} />\r\n              <Route path=\"/order/:id\" component={OrderScreen} />\r\n            </Switch>\r\n          </Container>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { useAppDispatch } from \"./app/hooks\";\r\n\r\nimport { loadFromLocalStorage } from \"./app/helpers\";\r\n\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport {\r\n  updateItems,\r\n  updateShippingAddress,\r\n  updatePaymentMethod,\r\n} from \"./features/Cart/cartSlice\";\r\nimport { login } from \"./features/Auth/authSlice\";\r\n\r\nconst App = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const cartItemsFromLS = loadFromLocalStorage(\"cartItems\");\r\n    const userFromLS = loadFromLocalStorage(\"user\");\r\n    const shippingAddressFromLS = loadFromLocalStorage(\"shippingAddress\");\r\n    const paymentMethodFromLS = loadFromLocalStorage(\"paymentMethod\");\r\n    if (cartItemsFromLS) {\r\n      dispatch(updateItems(cartItemsFromLS));\r\n    }\r\n    if (userFromLS) {\r\n      dispatch(login(userFromLS));\r\n    }\r\n    if (shippingAddressFromLS) {\r\n      dispatch(updateShippingAddress(shippingAddressFromLS));\r\n    }\r\n    if (paymentMethodFromLS) {\r\n      dispatch(updatePaymentMethod(paymentMethodFromLS));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return <AppRouter />;\r\n};\r\n\r\nexport default App;\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport uiReducer from \"../features/ui/uiSlice\";\r\nimport productReducer from \"../features/products/productSlice\";\r\nimport cartReducer from \"../features/Cart/cartSlice\";\r\nimport authReducer from \"../features/Auth/authSlice\";\r\nimport userOrdersReducer from \"../features/MyOrders/MyOrdersSlice\";\r\nimport usersReducer from \"../features/Users/UsersSlice\";\r\nimport orderListReducer from \"../features/Orders/OrdersSlice\";\r\nimport reviewsReducer from \"../features/Reviews/ReviewsSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    ui: uiReducer,\r\n    products: productReducer,\r\n    cart: cartReducer,\r\n    auth: authReducer,\r\n    userOrders: userOrdersReducer,\r\n    orders: orderListReducer,\r\n    users: usersReducer,\r\n    reviews: reviewsReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}